{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\Admin\\\\ResultsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getResultByExamId } from '../../Actions/examAction';\nimport Loader from '../Loader';\nimport Error from '../Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Results(exam_id) {\n  _s();\n  const dispatch = useDispatch();\n  const resultdata = useSelector(state => state.getResultByExamIdReducer);\n  const {\n    Result,\n    loading,\n    error\n  } = resultdata;\n  console.log(Result);\n  useEffect(() => {\n    dispatch(getResultByExamId(exam_id));\n  }, []);\n  useEffect(() => {\n    if (Result != null) {\n      const user_ids = Result.map(result => {});\n      dispatch();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n}\n_s(Results, \"rzULE2SrWU6BmDqBsx2kBB6bOAM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","getResultByExamId","Loader","Error","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","exam_id","_s","dispatch","resultdata","state","getResultByExamIdReducer","Result","loading","error","console","log","user_ids","map","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/ResultsPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'; \r\nimport { getResultByExamId } from '../../Actions/examAction';\r\nimport Loader from '../Loader';\r\nimport Error from '../Error';\r\n\r\nfunction Results(exam_id) {\r\n    const dispatch = useDispatch();\r\n    const resultdata = useSelector((state)=>state.getResultByExamIdReducer)\r\n    const {Result,loading,error }= resultdata;\r\n    console.log(Result);\r\n\r\n    useEffect(()=>{\r\n       dispatch( getResultByExamId(exam_id))\r\n    },[])\r\n    useEffect(()=>{\r\n      if(Result!=null){\r\n        const user_ids = Result.map((result)=>{\r\n          \r\n        })\r\n        dispatch()\r\n      }\r\n    })\r\n  return (\r\n    <>\r\n        {loading && <Loader/>}\r\n        {error && <Error/>}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Results"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7B,SAASC,OAAOA,CAACC,OAAO,EAAE;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,UAAU,GAAGb,WAAW,CAAEc,KAAK,IAAGA,KAAK,CAACC,wBAAwB,CAAC;EACvE,MAAM;IAACC,MAAM;IAACC,OAAO;IAACC;EAAM,CAAC,GAAEL,UAAU;EACzCM,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EAEnBjB,SAAS,CAAC,MAAI;IACXa,QAAQ,CAAEV,iBAAiB,CAACQ,OAAO,CAAC,CAAC;EACxC,CAAC,EAAC,EAAE,CAAC;EACLX,SAAS,CAAC,MAAI;IACZ,IAAGiB,MAAM,IAAE,IAAI,EAAC;MACd,MAAMK,QAAQ,GAAGL,MAAM,CAACM,GAAG,CAAEC,MAAM,IAAG,CAEtC,CAAC,CAAC;MACFX,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,CAAC;EACJ,oBACEN,OAAA,CAAAE,SAAA;IAAAgB,QAAA,GACKP,OAAO,iBAAIX,OAAA,CAACH,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACpBV,KAAK,iBAAIZ,OAAA,CAACF,KAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAEpB,CAAC;AAEP;AAACjB,EAAA,CAxBQF,OAAO;EAAA,QACKR,WAAW,EACTD,WAAW;AAAA;AAAA6B,EAAA,GAFzBpB,OAAO;AA0BhB,eAAeA,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}