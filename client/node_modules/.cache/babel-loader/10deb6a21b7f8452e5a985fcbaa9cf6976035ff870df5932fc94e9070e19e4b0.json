{"ast":null,"code":"import _toConsumableArray from\"E:/project/Mern-Quiz-App/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"E:/project/Mern-Quiz-App/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"E:/project/Mern-Quiz-App/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"E:/project/Mern-Quiz-App/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{getAllQuestions,getExamById}from'../../Actions/examAction';import{useParams,useNavigate}from'react-router-dom';import Loader from'../Loader';import\"./../../Css/ExaminationPage.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ExaminationPage=function ExaminationPage(){var _questions$currentInd,_questions$currentInd2;var dispatch=useDispatch();var navigate=useNavigate();var AllQuestions=useSelector(function(state){return state.getAllQuestionsReducer;});var Questions=AllQuestions.Questions;var getExam=useSelector(function(state){return state.getExamByIdReducer;});var Allexam=getExam.Allexam;// console.log(Allexam)\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExamCompleted=_useState2[0],setIsExamCompleted=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOn=_useState4[0],setIsOn=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),questions=_useState6[0],setQuestions=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),answer=_useState8[0],setAnswer=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),currentIndex=_useState10[0],setCurrentIndex=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),examTime=_useState12[0],setExamTime=_useState12[1];var examId=useParams();var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),completed=_useState14[0],setCompleted=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),remainingTime=_useState16[0],setRemainingTime=_useState16[1];//  console.log(examId);\nvar submitExam=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var currentTime,per;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentTime=new Date();console.log(currentTime);console.log(answer);per=calculateCorrectPercentage();console.log(per);_context.next=7;return fetch('/api/result/setResult',{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({exam_id:examId.exam_id,answers:answer,percentage:per})});case 7:setIsExamCompleted(true);case 8:case\"end\":return _context.stop();}},_callee);}));return function submitExam(){return _ref.apply(this,arguments);};}();useEffect(function(){if(completed){submitExam();}},[completed]);// console.log(answer)\nuseEffect(function(){var timer;if(examTime!==null){// console.log(examTime)\nvar time=examTime;if(!isOn){var currentTime=new Date();console.log(currentTime);timer=setTimeout(function(){setCompleted(true);},examTime*60000);// Submit exam after specified time\n}else{timer=setInterval(function(){setCurrentIndex(function(prevIndex){if(prevIndex===questions.length-1){clearInterval(timer);// submitExam() // Call submitExam when all questions are answered\nsetCompleted(true);}else{var _currentTime=new Date();console.log(_currentTime);return(prevIndex+1)%questions.length;}});},time*60000);// Switch to next question every specified time\n}// Update remaining time every second\nvar endTime=new Date().getTime()+examTime*60000;timer=setInterval(function(){var remaining=Math.max(0,Math.floor((endTime-new Date().getTime())/1000));setRemainingTime(remaining);},1000);}return function(){clearTimeout(timer);clearInterval(timer);};},[isOn,questions,examTime,currentIndex]);useEffect(function(){dispatch(getAllQuestions(examId));dispatch(getExamById(examId));},[dispatch,examId]);useEffect(function(){if(Allexam&&Questions){var _Questions$;setIsOn(Allexam.exam_type);setQuestions(Questions[0].questions);setAnswer(new Array((_Questions$=Questions[0])===null||_Questions$===void 0?void 0:_Questions$.questions.length).fill(null));setExamTime(Allexam.exam_time);}},[Allexam,Questions]);//  console.log(questions)\n//  console.log(isOn)\n//  const handleOptionSelect = (index,optionIndex) => {\n//   const updatedAnswer  = [...answer];\n//   updatedAnswer[index] = optionIndex;\n//   setAnswer(updatedAnswer);\n//  }\nvar handleOptionSelect=function handleOptionSelect(index,optionIndex){// console.log(index,optionIndex);\nsetAnswer(function(prevAnswer){console.log(prevAnswer);var updatedAnswer=_toConsumableArray(prevAnswer);updatedAnswer[index]=optionIndex;// console.log(updatedAnswer)\nreturn updatedAnswer;});};var calculateCorrectPercentage=function calculateCorrectPercentage(){var totalQuestions=questions.length;var correctAnswers=answer.filter(function(answer,index){return answer===questions[index].answer;}).length;// console.log(correctAnswers);\nvar percentage=correctAnswers/totalQuestions*100;return percentage.toFixed(2);};var handleGoBack=function handleGoBack(){navigate('/home');};// Helper function to format time\nvar formatTime=function formatTime(time){var hours=Math.floor(time/3600);var minutes=Math.floor(time%3600/60);var seconds=time%60;return\"\".concat(hours.toString().padStart(2,'0'),\":\").concat(minutes.toString().padStart(2,'0'),\":\").concat(seconds.toString().padStart(2,'0'));};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"examdiv\",children:Questions==null?/*#__PURE__*/_jsx(Loader,{}):isExamCompleted?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Exam is completed\"}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Result : \",calculateCorrectPercentage(),\"%\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGoBack,children:\"Go back to homepage\"})]}):!isOn?/*#__PURE__*/_jsxs(\"div\",{className:\"allquestiondiv\",children:[remainingTime!==null&&/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"end\",marginBottom:\"1rem\"},children:[\"Remaining Time: \",formatTime(remainingTime),\" seconds\"]}),questions&&questions.map(function(quesion,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"allq\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[index+1,\") \",quesion===null||quesion===void 0?void 0:quesion.title]}),quesion===null||quesion===void 0?void 0:quesion.options.map(function(option,optionIndex){return/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"2rem\"},children:[/*#__PURE__*/_jsxs(\"label\",{className:\"leb\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"option-\".concat(index),value:optionIndex,checked:answer[index]===optionIndex,onChange:function onChange(){return handleOptionSelect(index,optionIndex);}}),option]},optionIndex),/*#__PURE__*/_jsx(\"br\",{})]});})]});})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"singlequestiondiv\",children:[remainingTime!==null&&/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"end\",marginBottom:\"1rem\"},children:[\"Remaining Time: \",remainingTime,\" seconds\"]}),/*#__PURE__*/_jsxs(\"h3\",{children:[currentIndex+1,\") \",(_questions$currentInd=questions[currentIndex])===null||_questions$currentInd===void 0?void 0:_questions$currentInd.title]}),(_questions$currentInd2=questions[currentIndex])===null||_questions$currentInd2===void 0?void 0:_questions$currentInd2.options.map(function(option,optionIndex){return/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"2rem\"},children:[/*#__PURE__*/_jsxs(\"label\",{className:\"lev\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"question-\".concat(currentIndex),value:optionIndex,checked:answer[currentIndex]===optionIndex,onChange:function onChange(){return handleOptionSelect(currentIndex,optionIndex);}}),option]},optionIndex),/*#__PURE__*/_jsx(\"br\",{})]});})]})})});};export default ExaminationPage;","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","getAllQuestions","getExamById","useParams","useNavigate","Loader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ExaminationPage","_questions$currentInd","_questions$currentInd2","dispatch","navigate","AllQuestions","state","getAllQuestionsReducer","Questions","getExam","getExamByIdReducer","Allexam","_useState","_useState2","_slicedToArray","isExamCompleted","setIsExamCompleted","_useState3","_useState4","isOn","setIsOn","_useState5","_useState6","questions","setQuestions","_useState7","_useState8","answer","setAnswer","_useState9","_useState10","currentIndex","setCurrentIndex","_useState11","_useState12","examTime","setExamTime","examId","_useState13","_useState14","completed","setCompleted","_useState15","_useState16","remainingTime","setRemainingTime","submitExam","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","currentTime","per","wrap","_callee$","_context","prev","next","Date","console","log","calculateCorrectPercentage","fetch","method","headers","body","JSON","stringify","exam_id","answers","percentage","stop","apply","arguments","timer","time","setTimeout","setInterval","prevIndex","length","clearInterval","endTime","getTime","remaining","Math","max","floor","clearTimeout","_Questions$","exam_type","Array","fill","exam_time","handleOptionSelect","index","optionIndex","prevAnswer","updatedAnswer","_toConsumableArray","totalQuestions","correctAnswers","filter","toFixed","handleGoBack","formatTime","hours","minutes","seconds","concat","toString","padStart","children","className","onClick","style","textAlign","marginBottom","map","quesion","title","options","option","marginLeft","type","name","value","checked","onChange"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/User/ExaminationPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux'; \r\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\r\nimport { useParams,useNavigate } from 'react-router-dom';\r\nimport Loader from '../Loader';\r\nimport \"./../../Css/ExaminationPage.css\"\r\n\r\n\r\nconst ExaminationPage = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const AllQuestions = useSelector((state)=>state.getAllQuestionsReducer);\r\n  const {Questions} = AllQuestions;\r\n  const getExam = useSelector((state)=> state.getExamByIdReducer)\r\n  const {Allexam} = getExam;\r\n  // console.log(Allexam)\r\n  const [isExamCompleted, setIsExamCompleted] = useState(false);\r\n  const[isOn,setIsOn] = useState(false);\r\n  const[questions,setQuestions] = useState([]);\r\n  const[answer,setAnswer] = useState([]);\r\n  const[currentIndex,setCurrentIndex] = useState(0);\r\n  const[examTime,setExamTime] = useState(null)\r\n  const examId = useParams();\r\n  const [completed,setCompleted] = useState(false);\r\n  const [remainingTime, setRemainingTime] = useState(null);\r\n  //  console.log(examId);\r\n\r\n  const submitExam = async() => {\r\n    let currentTime = new Date();\r\n    console.log(currentTime);\r\n    console.log(answer)\r\n    const per = calculateCorrectPercentage();\r\n    console.log(per)\r\n    await fetch('/api/result/setResult',{\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body: JSON.stringify({exam_id:examId.exam_id,answers:answer,percentage: per})\r\n    });\r\n    setIsExamCompleted(true);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(completed){\r\n      submitExam();\r\n    }\r\n  },[completed])\r\n// console.log(answer)\r\nuseEffect(() => {\r\n  let timer;\r\n  if (examTime !== null) {\r\n    // console.log(examTime)\r\n    const time = examTime;\r\n    if (!isOn) {\r\n      let currentTime = new Date();\r\n      console.log(currentTime);\r\n      timer = setTimeout(()=>{\r\n        setCompleted(true)\r\n      }, examTime*60000); // Submit exam after specified time\r\n    } else {\r\n      timer = setInterval(() => {\r\n        setCurrentIndex((prevIndex) => {\r\n          if (prevIndex === questions.length - 1) {\r\n            clearInterval(timer);\r\n            // submitExam() // Call submitExam when all questions are answered\r\n            setCompleted(true);\r\n          } else {\r\n            let currentTime = new Date();\r\n            console.log(currentTime);\r\n            return (prevIndex + 1) % questions.length;\r\n          }\r\n        });\r\n      }, time*60000); // Switch to next question every specified time\r\n    }\r\n    // Update remaining time every second\r\n    const endTime = new Date().getTime() + examTime * 60000;\r\n    timer = setInterval(() => {\r\n      const remaining = Math.max(0, Math.floor((endTime - new Date().getTime()) / 1000));\r\n      setRemainingTime(remaining);\r\n    }, 1000);\r\n    \r\n  }\r\n  \r\n\r\n  return () => {\r\n    clearTimeout(timer);\r\n    clearInterval(timer);\r\n  };\r\n}, [isOn, questions, examTime,currentIndex]);\r\n\r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n    dispatch(getAllQuestions(examId))\r\n    dispatch(getExamById(examId))\r\n  },[dispatch,examId])\r\n\r\n  useEffect(()=>{\r\n    if(Allexam && Questions){\r\n      setIsOn(Allexam.exam_type)\r\n      setQuestions(Questions[0].questions);\r\n      setAnswer(new Array(Questions[0]?.questions.length).fill(null));\r\n      setExamTime(Allexam.exam_time)\r\n    }\r\n  },[Allexam,Questions]);\r\n\r\n  //  console.log(questions)\r\n  //  console.log(isOn)\r\n\r\n  //  const handleOptionSelect = (index,optionIndex) => {\r\n  //   const updatedAnswer  = [...answer];\r\n  //   updatedAnswer[index] = optionIndex;\r\n  //   setAnswer(updatedAnswer);\r\n  //  }\r\n   const handleOptionSelect = (index, optionIndex) => {\r\n    // console.log(index,optionIndex);\r\n    setAnswer((prevAnswer) => {\r\n        console.log(prevAnswer)\r\n      const updatedAnswer = [...prevAnswer];\r\n      updatedAnswer[index] = optionIndex;\r\n        // console.log(updatedAnswer)\r\n      return updatedAnswer;\r\n    });\r\n  };\r\n\r\n\r\n\r\n   const calculateCorrectPercentage = () => {\r\n    const totalQuestions = questions.length;\r\n    const correctAnswers = answer.filter(\r\n      (answer, index) => answer === questions[index].answer\r\n    ).length;\r\n    // console.log(correctAnswers);\r\n    const percentage = (correctAnswers / totalQuestions) * 100;\r\n    return percentage.toFixed(2);\r\n  };\r\n\r\n   const handleGoBack = () => {\r\n    navigate('/home')\r\n  };\r\n\r\n   // Helper function to format time\r\n   const formatTime = (time) => {\r\n    const hours = Math.floor(time / 3600);\r\n    const minutes = Math.floor((time % 3600) / 60);\r\n    const seconds = time % 60;\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(\r\n      2,\r\n      '0'\r\n    )}`;\r\n  };\r\n\r\n  return (\r\n   <>\r\n    <div className='examdiv'>\r\n    { \r\n    Questions == null ? <Loader/> :\r\n    isExamCompleted ? (\r\n        <div>\r\n          <h3>Exam is completed</h3>\r\n          <h4>Result : {calculateCorrectPercentage()}%</h4>\r\n          <button onClick={handleGoBack}>Go back to homepage</button>\r\n        </div>\r\n      ) \r\n      :\r\n    !isOn ? (\r\n      <div className='allquestiondiv'>\r\n      {/* Display remaining time in allquestiondiv */}\r\n      {remainingTime !== null && <div style={{textAlign:\"end\",marginBottom:\"1rem\"}} >Remaining Time: {formatTime(remainingTime)} seconds</div>}\r\n         {questions && questions.map((quesion,index)=>(\r\n          <div className='allq'>\r\n          <h3>{index+1}) {quesion?.title}</h3>\r\n          {quesion?.options.map((option,optionIndex)=>(\r\n            <div style={{marginLeft:\"2rem\"}}>\r\n            <label key={optionIndex} className='leb'>\r\n              <input\r\n                type='radio'\r\n                name={`option-${index}`}\r\n                value={optionIndex}\r\n                checked={answer[index] === optionIndex}\r\n                onChange={() => handleOptionSelect(index,optionIndex)}\r\n              />\r\n              {option}\r\n            </label><br/>\r\n            </div>\r\n          ))}\r\n          </div>\r\n          \r\n        ))}\r\n        {/* <input type='submit' onClick={submitExam}/> */}\r\n        </div>\r\n    ) : (\r\n      <div className='singlequestiondiv'>\r\n      {remainingTime !== null && <div style={{textAlign:\"end\",marginBottom:\"1rem\"}}>Remaining Time: {remainingTime} seconds</div>}\r\n          <h3>{currentIndex+1}) {questions[currentIndex]?.title}</h3>\r\n          {questions[currentIndex]?.options.map((option, optionIndex) => (\r\n            <div style={{marginLeft:\"2rem\"}}>\r\n            <label className='lev' key={optionIndex}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${currentIndex}`}\r\n                value={optionIndex}\r\n                checked={answer[currentIndex] === optionIndex}\r\n                onChange={() => handleOptionSelect(currentIndex,optionIndex)}\r\n              />\r\n              {option}\r\n            </label><br/>\r\n            </div>\r\n          ))}\r\n        </div>\r\n    )\r\n   }\r\n    </div>   \r\n   </>\r\n  );\r\n};\r\n\r\nexport default ExaminationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}