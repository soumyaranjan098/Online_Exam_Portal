{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\User\\\\ExaminationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\nimport { useParams } from 'react-router-dom';\nimport Loader from '../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExaminationPage = () => {\n  _s();\n  var _questions$currentInd, _questions$currentInd2;\n  const dispatch = useDispatch();\n  const AllQuestions = useSelector(state => state.getAllQuestionsReducer);\n  const {\n    Questions\n  } = AllQuestions;\n  const getExam = useSelector(state => state.getExamByIdReducer);\n  const {\n    Allexam\n  } = getExam;\n  // console.log(Allexam)\n  const [isOn, setIsOn] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [answer, setAnswer] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const examId = useParams();\n  //  console.log(examId);\n\n  const submitExam = () => {\n    console.log(\"call\");\n  };\n  useEffect(() => {\n    let timer;\n    if (!isOn) {\n      timer = setTimeout(submitExam, 30000); // Submit exam after 30 seconds (30000 milliseconds)\n    } else {\n      timer = setInterval(() => {\n        setCurrentIndex(prevIndex => {\n          if (prevIndex === questions.length - 1) {\n            clearInterval(timer);\n            submitExam(); // Call submitExam after 10 seconds (10000 milliseconds)\n          } else {\n            return (prevIndex + 1) % questions.length;\n          }\n        });\n      }, 10000); // Switch to next question every 10 seconds (10000 milliseconds)\n    }\n\n    return () => {\n      clearTimeout(timer);\n      clearInterval(timer);\n    };\n  }, [isOn, questions]);\n  useEffect(() => {\n    dispatch(getAllQuestions(examId));\n    dispatch(getExamById(examId));\n  }, [dispatch, examId]);\n  useEffect(() => {\n    if (Allexam && Questions) {\n      setIsOn(Allexam.exam_type);\n      setQuestions(Questions[0].questions);\n      setAnswer(new Array(Questions.length).fill(null));\n    }\n  }, [Allexam, Questions]);\n\n  //  console.log(questions)\n  //  console.log(isOn)\n\n  const handleOptionSelect = (index, optionIndex) => {\n    const updatedAnswer = [...answer];\n    updatedAnswer[index] = optionIndex;\n    setAnswer(updatedAnswer);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Questions == null ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }, this) : !isOn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [questions && questions.map((quesion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quesion === null || quesion === void 0 ? void 0 : quesion.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), quesion === null || quesion === void 0 ? void 0 : quesion.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `option-${index}`,\n              value: optionIndex,\n              checked: answer[index] === optionIndex,\n              onChange: () => handleOptionSelect(index, optionIndex)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), option]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: submitExam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: (_questions$currentInd = questions[currentIndex]) === null || _questions$currentInd === void 0 ? void 0 : _questions$currentInd.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), (_questions$currentInd2 = questions[currentIndex]) === null || _questions$currentInd2 === void 0 ? void 0 : _questions$currentInd2.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${currentIndex}`,\n          value: optionIndex,\n          checked: answer[currentIndex] === optionIndex,\n          onChange: () => handleOptionSelect(currentIndex, optionIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), option]\n      }, optionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ExaminationPage, \"DPuDb2hcyIyHsU/5z6XebC9cEc0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n_c = ExaminationPage;\nexport default ExaminationPage;\nvar _c;\n$RefreshReg$(_c, \"ExaminationPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","getAllQuestions","getExamById","useParams","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","ExaminationPage","_s","_questions$currentInd","_questions$currentInd2","dispatch","AllQuestions","state","getAllQuestionsReducer","Questions","getExam","getExamByIdReducer","Allexam","isOn","setIsOn","questions","setQuestions","answer","setAnswer","currentIndex","setCurrentIndex","examId","submitExam","console","log","timer","setTimeout","setInterval","prevIndex","length","clearInterval","clearTimeout","exam_type","Array","fill","handleOptionSelect","index","optionIndex","updatedAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","map","quesion","title","options","option","type","name","value","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/User/ExaminationPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux'; \r\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../Loader';\r\n\r\n\r\n\r\nconst ExaminationPage = () => {\r\n  const dispatch = useDispatch();\r\n  const AllQuestions = useSelector((state)=>state.getAllQuestionsReducer);\r\n  const {Questions} = AllQuestions;\r\n  const getExam = useSelector((state)=> state.getExamByIdReducer)\r\n  const {Allexam} = getExam;\r\n  // console.log(Allexam)\r\n  const[isOn,setIsOn] = useState(false);\r\n  const[questions,setQuestions] = useState([]);\r\n  const[answer,setAnswer] = useState([]);\r\n  const[currentIndex,setCurrentIndex] = useState(0)\r\n  const examId = useParams();\r\n  //  console.log(examId);\r\n\r\n\r\n  const submitExam = () => {\r\n    console.log(\"call\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (!isOn) {\r\n      timer = setTimeout(submitExam, 30000); // Submit exam after 30 seconds (30000 milliseconds)\r\n    } else {\r\n      timer = setInterval(() => {\r\n        setCurrentIndex((prevIndex) => {\r\n          if (prevIndex === questions.length - 1) {\r\n            clearInterval(timer);\r\n            submitExam() // Call submitExam after 10 seconds (10000 milliseconds)\r\n          }else{\r\n            return(prevIndex + 1) % questions.length\r\n          }\r\n        \r\n      });\r\n      }, 10000); // Switch to next question every 10 seconds (10000 milliseconds)\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      clearInterval(timer);\r\n    };\r\n  }, [isOn, questions]);\r\n\r\n  useEffect(()=>{\r\n    dispatch(getAllQuestions(examId))\r\n    dispatch(getExamById(examId))\r\n  },[dispatch,examId])\r\n\r\n  useEffect(()=>{\r\n    if(Allexam && Questions){\r\n      setIsOn(Allexam.exam_type)\r\n      setQuestions(Questions[0].questions);\r\n      setAnswer(new Array(Questions.length).fill(null));\r\n    }\r\n  },[Allexam,Questions]);\r\n\r\n  //  console.log(questions)\r\n  //  console.log(isOn)\r\n\r\n   const handleOptionSelect = (index,optionIndex) => {\r\n    const updatedAnswer  = [...answer];\r\n    updatedAnswer[index] = optionIndex;\r\n    setAnswer(updatedAnswer);\r\n   }\r\n\r\n  return (\r\n   <>\r\n   { \r\n    Questions == null ? <Loader/> :\r\n    !isOn ? (\r\n      <div>\r\n         {questions && questions.map((quesion,index)=>(\r\n          <div>\r\n          <h3>{quesion?.title}</h3>\r\n          {quesion?.options.map((option,optionIndex)=>(\r\n            <div>\r\n            <label key={optionIndex}>\r\n              <input\r\n                type='radio'\r\n                name={`option-${index}`}\r\n                value={optionIndex}\r\n                checked={answer[index] === optionIndex}\r\n                onChange={() => handleOptionSelect(index,optionIndex)}\r\n              />\r\n              {option}\r\n            </label><br/>\r\n            </div>\r\n          ))}\r\n          </div>\r\n          \r\n        ))}\r\n        <input type='submit' onClick={submitExam}/>\r\n        </div>\r\n    ) : (\r\n      <div>\r\n          <h3>{questions[currentIndex]?.title}</h3>\r\n          {questions[currentIndex]?.options.map((option, optionIndex) => (\r\n            <label key={optionIndex}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${currentIndex}`}\r\n                value={optionIndex}\r\n                checked={answer[currentIndex] === optionIndex}\r\n                onChange={() => handleOptionSelect(currentIndex,optionIndex)}\r\n              />\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n    )\r\n   }\r\n   \r\n   </>\r\n  );\r\n};\r\n\r\nexport default ExaminationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}