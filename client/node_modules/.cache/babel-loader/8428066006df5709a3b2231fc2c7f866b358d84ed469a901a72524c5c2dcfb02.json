{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\Admin\\\\ResultsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getResultByExamId } from '../../Actions/examAction';\nimport { getUsersById } from '../../Actions/userAction';\nimport Loader from '../Loader';\nimport Error from '../Error';\nimport { Button, Table, Modal } from 'react-bootstrap';\nimport ResultData from './ResultData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Results(exam_id) {\n  _s();\n  const dispatch = useDispatch();\n  const resultdata = useSelector(state => state.getResultByExamIdReducer);\n  const {\n    Result\n  } = resultdata;\n  const userData = useSelector(state => state.getUsersByIdReducer);\n  const {\n    students,\n    loading,\n    error\n  } = userData;\n  const [sortedStudents, setSortedStudents] = useState([]);\n  // console.log(Result)\n  useEffect(() => {\n    dispatch(getResultByExamId(exam_id));\n  }, []);\n  useEffect(() => {\n    if (Result != null) {\n      const user_ids = Result.map(result => result.user_id);\n      dispatch(getUsersById(user_ids));\n    }\n  }, [Result]);\n  useEffect(() => {\n    if (students.length > 0) {\n      const sorted = [...students].sort((a, b) => a.registration_no - b.registration_no);\n      setSortedStudents(sorted);\n    }\n  }, [students]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"4rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name Of Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Registration No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Review Answers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Result && sortedStudents.map(student => {\n              const res = Result.find(result => result.user_id === student._id);\n              const percentage = res.percentage !== undefined ? res.percentage : 'Not Available';\n              console.log(percentage);\n              const answers = res.answers;\n              return /*#__PURE__*/_jsxDEV(ResultData, {\n                student: student,\n                answers: answers,\n                exam_id: exam_id,\n                percentage: percentage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Results, \"QT9VkCUYQQYMIxo51UA8pdh7hf4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","getResultByExamId","getUsersById","Loader","Error","Button","Table","Modal","ResultData","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","exam_id","_s","dispatch","resultdata","state","getResultByExamIdReducer","Result","userData","getUsersByIdReducer","students","loading","error","sortedStudents","setSortedStudents","user_ids","map","result","user_id","length","sorted","sort","a","b","registration_no","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","student","res","find","_id","percentage","undefined","console","log","answers","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/ResultsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'; \r\nimport { getResultByExamId } from '../../Actions/examAction';\r\nimport { getUsersById } from '../../Actions/userAction';\r\nimport Loader from '../Loader';\r\nimport Error from '../Error';\r\nimport { Button, Table, Modal } from 'react-bootstrap';\r\nimport ResultData from './ResultData';\r\n\r\nfunction Results(exam_id) {\r\n  const dispatch = useDispatch();\r\n  const resultdata = useSelector((state) => state.getResultByExamIdReducer);\r\n  const { Result } = resultdata;\r\n  const userData = useSelector((state) => state.getUsersByIdReducer);\r\n  const { students, loading, error } = userData;\r\n  const [sortedStudents, setSortedStudents] = useState([]);\r\n  // console.log(Result)\r\n  useEffect(() => {\r\n    dispatch(getResultByExamId(exam_id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Result != null) {\r\n      const user_ids = Result.map((result) => result.user_id);\r\n      dispatch(getUsersById(user_ids));\r\n    }\r\n  }, [Result]);\r\n\r\n  useEffect(() => {\r\n    if (students.length > 0) {\r\n      const sorted = [...students].sort((a, b) => a.registration_no - b.registration_no);\r\n      setSortedStudents(sorted);\r\n    }\r\n  }, [students]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {loading && <Loader />}\r\n        {error && <Error />}\r\n\r\n        <div style={{ padding: \"4rem\" }}>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name Of Student</th>\r\n                <th>Registration No</th>\r\n                <th>Mark</th>\r\n                <th>Review Answers</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Result && sortedStudents.map((student) => {\r\n                const res = Result.find((result) => result.user_id === student._id);\r\n                const percentage = res.percentage !== undefined ? res.percentage : 'Not Available';\r\n                console.log(percentage)\r\n                const answers = res.answers;\r\n\r\n                return (\r\n                  <ResultData student={student} answers={answers} exam_id={exam_id} percentage={percentage} />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,YAAY,QAAQ,0BAA0B;AACvD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,UAAU;AAC5B,SAASC,MAAM,EAAEC,KAAK,EAAEC,KAAK,QAAQ,iBAAiB;AACtD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,OAAOA,CAACC,OAAO,EAAE;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,UAAU,GAAGlB,WAAW,CAAEmB,KAAK,IAAKA,KAAK,CAACC,wBAAwB,CAAC;EACzE,MAAM;IAAEC;EAAO,CAAC,GAAGH,UAAU;EAC7B,MAAMI,QAAQ,GAAGtB,WAAW,CAAEmB,KAAK,IAAKA,KAAK,CAACI,mBAAmB,CAAC;EAClE,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGJ,QAAQ;EAC7C,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACxD;EACAD,SAAS,CAAC,MAAM;IACdmB,QAAQ,CAACf,iBAAiB,CAACa,OAAO,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,IAAIuB,MAAM,IAAI,IAAI,EAAE;MAClB,MAAMQ,QAAQ,GAAGR,MAAM,CAACS,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACC,OAAO,CAAC;MACvDf,QAAQ,CAACd,YAAY,CAAC0B,QAAQ,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZvB,SAAS,CAAC,MAAM;IACd,IAAI0B,QAAQ,CAACS,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMC,MAAM,GAAG,CAAC,GAAGV,QAAQ,CAAC,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,eAAe,GAAGD,CAAC,CAACC,eAAe,CAAC;MAClFV,iBAAiB,CAACM,MAAM,CAAC;IAC3B;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACEb,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACE5B,OAAA;MAAA4B,QAAA,GACGd,OAAO,iBAAId,OAAA,CAACP,MAAM;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACrBjB,KAAK,iBAAIf,OAAA,CAACN,KAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEnBhC,OAAA;QAAKiC,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAAAN,QAAA,eAC9B5B,OAAA,CAACJ,KAAK;UAAAgC,QAAA,gBACJ5B,OAAA;YAAA4B,QAAA,eACE5B,OAAA;cAAA4B,QAAA,gBACE5B,OAAA;gBAAA4B,QAAA,EAAI;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxBhC,OAAA;gBAAA4B,QAAA,EAAI;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxBhC,OAAA;gBAAA4B,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbhC,OAAA;gBAAA4B,QAAA,EAAI;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRhC,OAAA;YAAA4B,QAAA,EACGlB,MAAM,IAAIM,cAAc,CAACG,GAAG,CAAEgB,OAAO,IAAK;cACzC,MAAMC,GAAG,GAAG1B,MAAM,CAAC2B,IAAI,CAAEjB,MAAM,IAAKA,MAAM,CAACC,OAAO,KAAKc,OAAO,CAACG,GAAG,CAAC;cACnE,MAAMC,UAAU,GAAGH,GAAG,CAACG,UAAU,KAAKC,SAAS,GAAGJ,GAAG,CAACG,UAAU,GAAG,eAAe;cAClFE,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;cACvB,MAAMI,OAAO,GAAGP,GAAG,CAACO,OAAO;cAE3B,oBACE3C,OAAA,CAACF,UAAU;gBAACqC,OAAO,EAAEA,OAAQ;gBAACQ,OAAO,EAAEA,OAAQ;gBAACvC,OAAO,EAAEA,OAAQ;gBAACmC,UAAU,EAAEA;cAAW;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAEhG,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAAC3B,EAAA,CA3DQF,OAAO;EAAA,QACGb,WAAW,EACTD,WAAW,EAEbA,WAAW;AAAA;AAAAuD,EAAA,GAJrBzC,OAAO;AA6DhB,eAAeA,OAAO;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}