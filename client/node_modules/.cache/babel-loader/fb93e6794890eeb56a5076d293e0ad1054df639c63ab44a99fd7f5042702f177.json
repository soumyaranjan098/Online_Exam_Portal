{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\User\\\\ExaminationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\nimport { useParams } from 'react-router-dom';\nimport Loader from '../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExaminationPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const AllQuestions = useSelector(state => state.getAllQuestionsReducer);\n  const {\n    Questions\n  } = AllQuestions;\n  const getExam = useSelector(state => state.getExamByIdReducer);\n  const {\n    Allexam\n  } = getExam;\n  // console.log(Allexam)\n  const [isOn, setIsOn] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [answer, setAnswer] = useState([]);\n  const examId = useParams();\n  console.log(examId);\n  useEffect(() => {\n    dispatch(getAllQuestions(examId));\n    dispatch(getExamById(examId));\n  }, [dispatch, examId]);\n  useEffect(() => {\n    if (Allexam && Questions) {\n      setIsOn(Allexam.exam_type);\n      setQuestions(Questions[0].questions);\n      setAnswer(new Array(Questions.length).fill(null));\n    }\n  }, [Allexam, Questions]);\n  console.log(questions);\n  console.log(isOn);\n  const handleOptionSelect = (index, optionIndex) => {\n    const updatedAnswer = [...answer];\n    updatedAnswer[index] = optionIndex;\n    setAnswer(updatedAnswer);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Questions == null ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this) : isOn !== true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions && questions.map((quesion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quesion.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), quesion.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: optionIndex,\n              checked: answer[index] === optionIndex,\n              onChange: () => handleOptionSelect(index, optionIndex)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), option]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_s(ExaminationPage, \"/khev4ladGEj4uQOt3E4NS/t+bU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n_c = ExaminationPage;\nexport default ExaminationPage;\nvar _c;\n$RefreshReg$(_c, \"ExaminationPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","getAllQuestions","getExamById","useParams","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","ExaminationPage","_s","dispatch","AllQuestions","state","getAllQuestionsReducer","Questions","getExam","getExamByIdReducer","Allexam","isOn","setIsOn","questions","setQuestions","answer","setAnswer","examId","console","log","exam_type","Array","length","fill","handleOptionSelect","index","optionIndex","updatedAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","map","quesion","title","options","option","type","name","value","checked","onChange","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/User/ExaminationPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux'; \r\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../Loader';\r\n\r\n\r\n\r\nconst ExaminationPage = () => {\r\n  const dispatch = useDispatch();\r\n  const AllQuestions = useSelector((state)=>state.getAllQuestionsReducer);\r\n  const {Questions} = AllQuestions;\r\n  const getExam = useSelector((state)=> state.getExamByIdReducer)\r\n  const {Allexam} = getExam;\r\n  // console.log(Allexam)\r\n  const[isOn,setIsOn] = useState(false);\r\n  const[questions,setQuestions] = useState([]);\r\n  const[answer,setAnswer] = useState([]);\r\n\r\n  const examId = useParams();\r\n   console.log(examId);\r\n\r\n  useEffect(()=>{\r\n    dispatch(getAllQuestions(examId))\r\n    dispatch(getExamById(examId))\r\n  },[dispatch,examId])\r\n\r\n  useEffect(()=>{\r\n    if(Allexam && Questions){\r\n      setIsOn(Allexam.exam_type)\r\n      setQuestions(Questions[0].questions);\r\n      setAnswer(new Array(Questions.length).fill(null));\r\n    }\r\n  },[Allexam,Questions]);\r\n\r\n   console.log(questions)\r\n   console.log(isOn)\r\n\r\n   const handleOptionSelect = (index,optionIndex) => {\r\n    const updatedAnswer  = [...answer];\r\n    updatedAnswer[index] = optionIndex;\r\n    setAnswer(updatedAnswer);\r\n   }\r\n\r\n  return (\r\n   <>\r\n   { \r\n    Questions == null ? <Loader/> :\r\n    isOn!==true ? (\r\n      <div>\r\n        { questions && questions.map((quesion,index)=>(\r\n          <div>\r\n          <h3>{quesion.title}</h3>\r\n          {quesion.options.map((option,optionIndex)=>(\r\n            <div>\r\n            <label key={optionIndex}>\r\n              <input\r\n                type='radio'\r\n                name='option'\r\n                value={optionIndex}\r\n                checked={answer[index] === optionIndex}\r\n                onChange={() => handleOptionSelect(index,optionIndex)}\r\n              />\r\n              {option}\r\n            </label><br/>\r\n            </div>\r\n          ))}\r\n          </div>\r\n          \r\n        ))}\r\n      </div>\r\n    ) : (<div></div>)\r\n   }\r\n\r\n   </>\r\n  );\r\n};\r\n\r\nexport default ExaminationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}