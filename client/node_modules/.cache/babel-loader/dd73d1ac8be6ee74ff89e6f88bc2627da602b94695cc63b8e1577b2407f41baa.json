{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\nimport { useParams } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExaminationPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const AllQuestions = useSelector(state => state.getAllQuestionsReducer);\n  const {\n    Questions\n  } = AllQuestions;\n  const getExam = useSelector(state => state.getExamByIdReducer);\n  const {\n    Allexam\n  } = getExam;\n  // console.log(Allexam)\n  const [isOn, setIsOn] = useState(false);\n  const examId = useParams();\n  // console.log(examId);\n\n  useEffect(() => {\n    dispatch(getAllQuestions(examId));\n    dispatch(getExamById(examId));\n  }, [dispatch, examId]);\n  useEffect(() => {\n    if (Allexam) {\n      setIsOn(Allexam.exam_type);\n    }\n  }, [Allexam]);\n  console.log(Questions[0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(ExaminationPage, \"9ms4Ybj1ti2zCdwWVVXeda9y0Wk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n_c = ExaminationPage;\nexport default ExaminationPage;\nvar _c;\n$RefreshReg$(_c, \"ExaminationPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","getAllQuestions","getExamById","useParams","Fragment","_Fragment","jsxDEV","_jsxDEV","ExaminationPage","_s","dispatch","AllQuestions","state","getAllQuestionsReducer","Questions","getExam","getExamByIdReducer","Allexam","isOn","setIsOn","examId","exam_type","console","log","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/User/ExaminationPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux'; \r\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ExaminationPage = () => {\r\n  const dispatch = useDispatch();\r\n  const AllQuestions = useSelector((state)=>state.getAllQuestionsReducer);\r\n  const {Questions} = AllQuestions;\r\n  const getExam = useSelector((state)=> state.getExamByIdReducer)\r\n  const {Allexam} = getExam;\r\n  // console.log(Allexam)\r\n  const[isOn,setIsOn] = useState(false);\r\n  const examId = useParams();\r\n  // console.log(examId);\r\n\r\n  useEffect(()=>{\r\n    dispatch(getAllQuestions(examId))\r\n    dispatch(getExamById(examId))\r\n  },[dispatch,examId])\r\n\r\n  useEffect(()=>{\r\n    if(Allexam){\r\n      setIsOn(Allexam.exam_type)\r\n    }\r\n  },[Allexam]);\r\n\r\n   console.log(Questions[0])\r\n  return (\r\n   <>\r\n\r\n   </>\r\n  );\r\n};\r\n\r\nexport default ExaminationPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,eAAe,EAAEC,WAAW,QAAQ,0BAA0B;AACvE,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,YAAY,GAAGZ,WAAW,CAAEa,KAAK,IAAGA,KAAK,CAACC,sBAAsB,CAAC;EACvE,MAAM;IAACC;EAAS,CAAC,GAAGH,YAAY;EAChC,MAAMI,OAAO,GAAGhB,WAAW,CAAEa,KAAK,IAAIA,KAAK,CAACI,kBAAkB,CAAC;EAC/D,MAAM;IAACC;EAAO,CAAC,GAAGF,OAAO;EACzB;EACA,MAAK,CAACG,IAAI,EAACC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAMuB,MAAM,GAAGjB,SAAS,CAAC,CAAC;EAC1B;;EAEAL,SAAS,CAAC,MAAI;IACZY,QAAQ,CAACT,eAAe,CAACmB,MAAM,CAAC,CAAC;IACjCV,QAAQ,CAACR,WAAW,CAACkB,MAAM,CAAC,CAAC;EAC/B,CAAC,EAAC,CAACV,QAAQ,EAACU,MAAM,CAAC,CAAC;EAEpBtB,SAAS,CAAC,MAAI;IACZ,IAAGmB,OAAO,EAAC;MACTE,OAAO,CAACF,OAAO,CAACI,SAAS,CAAC;IAC5B;EACF,CAAC,EAAC,CAACJ,OAAO,CAAC,CAAC;EAEXK,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC,CAAC,CAAC,CAAC;EAC1B,oBACCP,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEN,CAAC;AAACI,EAAA,CA5BID,eAAe;EAAA,QACFR,WAAW,EACPD,WAAW,EAEhBA,WAAW,EAIZI,SAAS;AAAA;AAAAqB,EAAA,GARpBhB,eAAe;AA8BrB,eAAeA,eAAe;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}