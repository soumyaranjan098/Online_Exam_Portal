{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\Admin\\\\CreateQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateQuestionForm = _ref => {\n  _s();\n  let {\n    examName\n  } = _ref;\n  console.log(examName);\n  const [questions, setQuestions] = useState([{\n    title: \"\",\n    options: [\"\", \"\", \"\", \"\"],\n    answerIndex: 0\n  }]);\n  const [exam_id, setExamId] = useState(\"\");\n  const handleQuestionChange = (index, field, value) => {\n    const updatedQuestion = [...questions];\n    updatedQuestion[index][field] = value;\n    setQuestions(updatedQuestion);\n  };\n  const handleOptionChange = (index, optionIndex, value) => {\n    const updatedQuestion = [...questions];\n    updatedQuestion[index].options[optionIndex] = value;\n    setQuestions(updatedQuestion);\n  };\n  const handleDeleteQuestion = index => {\n    const updatedQuestion = [...questions];\n    updatedQuestion.splice(index, 1);\n    setQuestions(updatedQuestion);\n  };\n  const handleAddQuestions = () => {\n    const newQuestion = {\n      title: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      answerIndex: 0\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n  const examData = async () => {\n    try {\n      const res = await fetch('/api/exam/getExamByID', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          examName\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n      setExamId(data._id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    examData();\n  }, []);\n  const formSubmit = async e => {\n    e.preventDefault();\n    try {\n      const resp = await fetch('/api/exam/addNewQuestion', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          exam_id,\n          questions\n        })\n      });\n      if (resp.status == 201) {\n        window.alert(\"successfully created..\");\n      } else {\n        window.alert(\"error occured..\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: examName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Question \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: question.title,\n          type: \"text\",\n          placeholder: \"Question Title\",\n          onChange: e => handleQuestionChange(index, 'title', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Options:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            onChange: e => handleOptionChange(index, optionIndex, e.target.value),\n            placeholder: `Option ${optionIndex + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: question.answerIndex,\n          onChange: e => handleQuestionChange(index, 'answerIndex', parseInt(e.target.value)),\n          children: question.options.map((_, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: optionIndex,\n            children: [\"Option \", optionIndex + 1]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDeleteQuestion(index),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddQuestions,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: formSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CreateQuestionForm, \"+K8PVLd6BxUrW7ntE41a1qLUbV4=\");\n_c = CreateQuestionForm;\nexport default CreateQuestionForm;\nvar _c;\n$RefreshReg$(_c, \"CreateQuestionForm\");","map":{"version":3,"names":["React","useEffect","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateQuestionForm","_ref","_s","examName","console","log","questions","setQuestions","title","options","answerIndex","exam_id","setExamId","handleQuestionChange","index","field","value","updatedQuestion","handleOptionChange","optionIndex","handleDeleteQuestion","splice","handleAddQuestions","newQuestion","examData","res","fetch","method","headers","body","JSON","stringify","data","json","_id","err","formSubmit","e","preventDefault","resp","status","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","type","placeholder","onChange","target","option","parseInt","_","onClick","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/CreateQuestion.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CreateQuestionForm = ({examName}) => {\r\n    console.log(examName);\r\n    const [questions , setQuestions] = useState([\r\n        {\r\n            title: \"\",\r\n            options:[\"\",\"\",\"\",\"\"],\r\n            answerIndex:0\r\n        }\r\n    ]);\r\n    const [exam_id ,setExamId] = useState(\"\");\r\n\r\n    const handleQuestionChange = (index,field,value) =>{\r\n        const updatedQuestion = [...questions];\r\n        updatedQuestion[index][field] = value\r\n        setQuestions(updatedQuestion);\r\n    }\r\n\r\n    const handleOptionChange = (index,optionIndex,value) => {\r\n        const updatedQuestion = [...questions];\r\n        updatedQuestion[index].options[optionIndex] = value;\r\n        setQuestions(updatedQuestion)\r\n    }\r\n\r\n    const handleDeleteQuestion = (index) =>{\r\n        const updatedQuestion = [...questions];\r\n        updatedQuestion.splice(index,1);\r\n        setQuestions(updatedQuestion);\r\n    }\r\n\r\n    const handleAddQuestions = () => {\r\n        const newQuestion = {\r\n            title : \"\",\r\n            options: [\"\",\"\",\"\",\"\"],\r\n            answerIndex: 0\r\n        }\r\n\r\n        setQuestions([...questions,newQuestion]);\r\n    }\r\n\r\n    const examData = async() =>{\r\n        try{\r\n            const res = await fetch('/api/exam/getExamByID',{\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    examName\r\n                })\r\n            });\r\n            const data = await res.json();\r\n            console.log(data);\r\n            setExamId(data._id)\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        examData()\r\n    },[])\r\n\r\n    const formSubmit = async(e) =>{\r\n        e.preventDefault();\r\n        try{\r\n            const resp = await fetch('/api/exam/addNewQuestion',{\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body:JSON.stringify({exam_id,questions})\r\n            });\r\n            \r\n            if(resp.status==201){\r\n                window.alert(\"successfully created..\")\r\n            }else{\r\n                window.alert(\"error occured..\")\r\n            }\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div>\r\n        <h1>{examName}</h1>\r\n            {questions.map((question,index)=>(\r\n                <div key={index}>\r\n                <h2>Question {index+1}</h2>\r\n               <input \r\n                    value={question.title}\r\n                    type='text'\r\n                    placeholder='Question Title'\r\n                    onChange={(e)=> handleQuestionChange(index,'title',e.target.value)}\r\n               />\r\n               <h4>Options:</h4>\r\n              {question.options.map((option,optionIndex)=>(\r\n                <div key={optionIndex}>\r\n                <input \r\n                    type='text'\r\n                    value={option} \r\n                    onChange={(e)=>handleOptionChange(index,optionIndex,e.target.value) } \r\n                    placeholder= {`Option ${optionIndex+1}`}\r\n                />\r\n                </div>\r\n                ))}\r\n            <h4>Answer:</h4>\r\n            <select\r\n                value={question.answerIndex}\r\n                onChange={(e)=>handleQuestionChange(index,'answerIndex',parseInt(e.target.value))}>\r\n                {question.options.map((_,optionIndex)=>(\r\n                    <option key={optionIndex} value={optionIndex} >\r\n                        Option {optionIndex+1}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <Button onClick={()=>handleDeleteQuestion(index)}>DELETE</Button>\r\n                </div>\r\n            ))}\r\n            <Button onClick={handleAddQuestions}>ADD</Button>\r\n            <Button onClick={formSubmit}>Submit</Button>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateQuestionForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,kBAAkB,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAClCG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrB,MAAM,CAACG,SAAS,EAAGC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CACxC;IACIc,KAAK,EAAE,EAAE;IACTC,OAAO,EAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;IACrBC,WAAW,EAAC;EAChB,CAAC,CACJ,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMmB,oBAAoB,GAAGA,CAACC,KAAK,EAACC,KAAK,EAACC,KAAK,KAAI;IAC/C,MAAMC,eAAe,GAAG,CAAC,GAAGX,SAAS,CAAC;IACtCW,eAAe,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGC,KAAK;IACrCT,YAAY,CAACU,eAAe,CAAC;EACjC,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAACJ,KAAK,EAACK,WAAW,EAACH,KAAK,KAAK;IACpD,MAAMC,eAAe,GAAG,CAAC,GAAGX,SAAS,CAAC;IACtCW,eAAe,CAACH,KAAK,CAAC,CAACL,OAAO,CAACU,WAAW,CAAC,GAAGH,KAAK;IACnDT,YAAY,CAACU,eAAe,CAAC;EACjC,CAAC;EAED,MAAMG,oBAAoB,GAAIN,KAAK,IAAI;IACnC,MAAMG,eAAe,GAAG,CAAC,GAAGX,SAAS,CAAC;IACtCW,eAAe,CAACI,MAAM,CAACP,KAAK,EAAC,CAAC,CAAC;IAC/BP,YAAY,CAACU,eAAe,CAAC;EACjC,CAAC;EAED,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,WAAW,GAAG;MAChBf,KAAK,EAAG,EAAE;MACVC,OAAO,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;MACtBC,WAAW,EAAE;IACjB,CAAC;IAEDH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAACiB,WAAW,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAU;IACvB,IAAG;MACC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAC;QAC5CC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACJ,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB5B;QACJ,CAAC;MACL,CAAC,CAAC;MACF,MAAM6B,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B7B,OAAO,CAACC,GAAG,CAAC2B,IAAI,CAAC;MACjBpB,SAAS,CAACoB,IAAI,CAACE,GAAG,CAAC;IACvB,CAAC,QAAMC,GAAG,EAAC;MACP/B,OAAO,CAACC,GAAG,CAAC8B,GAAG,CAAC;IACpB;EACJ,CAAC;EACD1C,SAAS,CAAC,MAAI;IACV+B,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMY,UAAU,GAAG,MAAMC,CAAC,IAAI;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAG;MACC,MAAMC,IAAI,GAAG,MAAMb,KAAK,CAAC,0BAA0B,EAAC;QAChDC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACJ,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;UAACpB,OAAO;UAACL;QAAS,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAGiC,IAAI,CAACC,MAAM,IAAE,GAAG,EAAC;QAChBC,MAAM,CAACC,KAAK,CAAC,wBAAwB,CAAC;MAC1C,CAAC,MAAI;QACDD,MAAM,CAACC,KAAK,CAAC,iBAAiB,CAAC;MACnC;IACJ,CAAC,QAAMP,GAAG,EAAC;MACP/B,OAAO,CAACC,GAAG,CAAC8B,GAAG,CAAC;IACpB;EAEJ,CAAC;EAEH,oBACEtC,OAAA,CAAAE,SAAA;IAAA4C,QAAA,eACI9C,OAAA;MAAA8C,QAAA,gBACA9C,OAAA;QAAA8C,QAAA,EAAKxC;MAAQ;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACdzC,SAAS,CAAC0C,GAAG,CAAC,CAACC,QAAQ,EAACnC,KAAK,kBAC1BjB,OAAA;QAAA8C,QAAA,gBACA9C,OAAA;UAAA8C,QAAA,GAAI,WAAS,EAAC7B,KAAK,GAAC,CAAC;QAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5BlD,OAAA;UACKmB,KAAK,EAAEiC,QAAQ,CAACzC,KAAM;UACtB0C,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,gBAAgB;UAC5BC,QAAQ,EAAGf,CAAC,IAAIxB,oBAAoB,CAACC,KAAK,EAAC,OAAO,EAACuB,CAAC,CAACgB,MAAM,CAACrC,KAAK;QAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE,CAAC,eACFlD,OAAA;UAAA8C,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjBE,QAAQ,CAACxC,OAAO,CAACuC,GAAG,CAAC,CAACM,MAAM,EAACnC,WAAW,kBACvCtB,OAAA;UAAA8C,QAAA,eACA9C,OAAA;YACIqD,IAAI,EAAC,MAAM;YACXlC,KAAK,EAAEsC,MAAO;YACdF,QAAQ,EAAGf,CAAC,IAAGnB,kBAAkB,CAACJ,KAAK,EAACK,WAAW,EAACkB,CAAC,CAACgB,MAAM,CAACrC,KAAK,CAAG;YACrEmC,WAAW,EAAI,UAAShC,WAAW,GAAC,CAAE;UAAE;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C;QAAC,GANQ5B,WAAW;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOhB,CACJ,CAAC,eACNlD,OAAA;UAAA8C,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBlD,OAAA;UACImB,KAAK,EAAEiC,QAAQ,CAACvC,WAAY;UAC5B0C,QAAQ,EAAGf,CAAC,IAAGxB,oBAAoB,CAACC,KAAK,EAAC,aAAa,EAACyC,QAAQ,CAAClB,CAAC,CAACgB,MAAM,CAACrC,KAAK,CAAC,CAAE;UAAA2B,QAAA,EACjFM,QAAQ,CAACxC,OAAO,CAACuC,GAAG,CAAC,CAACQ,CAAC,EAACrC,WAAW,kBAChCtB,OAAA;YAA0BmB,KAAK,EAAEG,WAAY;YAAAwB,QAAA,GAAE,SACpC,EAACxB,WAAW,GAAC,CAAC;UAAA,GADZA,WAAW;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhB,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACTlD,OAAA,CAACF,MAAM;UAAC8D,OAAO,EAAEA,CAAA,KAAIrC,oBAAoB,CAACN,KAAK,CAAE;UAAA6B,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GA7BnDjC,KAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8BV,CACR,CAAC,eACFlD,OAAA,CAACF,MAAM;QAAC8D,OAAO,EAAEnC,kBAAmB;QAAAqB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjDlD,OAAA,CAACF,MAAM;QAAC8D,OAAO,EAAErB,UAAW;QAAAO,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC,gBACR,CAAC;AAEP,CAAC;AAAC7C,EAAA,CA7HIF,kBAAkB;AAAA0D,EAAA,GAAlB1D,kBAAkB;AA+HxB,eAAeA,kBAAkB;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}