{"ast":null,"code":"import _regeneratorRuntime from\"E:/project/Mern-Quiz-App/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"E:/project/Mern-Quiz-App/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"E:/project/Mern-Quiz-App/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Container,Form,Button,ButtonGroup,ToggleButton}from'react-bootstrap';import CreateQuestionForm from'./CreateQuestion';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CreateExam(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),examName=_useState2[0],setExamName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),show=_useState4[0],setShow=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),radioValue=_useState6[0],setRadioValue=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),time=_useState8[0],setTime=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),examDate=_useState10[0],setExamDate=_useState10[1];// console.log(radioValue)\nvar radios=[{name:'Total 30min',value:false},{name:'One by One',value:true}];var handleChange=function handleChange(e){setExamName(e.target.value);};var handleTime=function handleTime(e){setTime(e.target.value);};var handleDate=function handleDate(e){setExamDate(e.target.value);};var examHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var exam_name,exam_type,exam_time,exam_date,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();exam_name=examName;// console.log(exam_name)\nexam_type=radioValue==='true';exam_time=time==null?exam_type?1:30:time;exam_date=examDate;_context.next=7;return fetch('/api/exam/createExam',{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({exam_name:exam_name,exam_type:exam_type,exam_time:exam_time,exam_date:exam_date})});case 7:res=_context.sent;// const data = await res.json();\n// console.log(res)\nif(res.status===400||res.status===422||!res){window.alert(\"error occured...\");}else{setShow(true);}case 9:case\"end\":return _context.stop();}},_callee);}));return function examHandler(_x){return _ref.apply(this,arguments);};}();var renderForm=function renderForm(){if(show){return/*#__PURE__*/_jsx(CreateQuestionForm,{examName:examName});}else{return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Form,{className:\"registerform\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Set Examination Name\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"Please set a unique Examination name\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formBasicName\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter name\",name:\"name\",value:examName,onChange:handleChange})]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h6\",{children:\"The below toggle button is used to set the exam type, If Total 30min is selected then after 30m the form will be auto submitted. If One by One is selected then each quesion will be fetched One by One with 1min. time interval.\"}),/*#__PURE__*/_jsx(ButtonGroup,{className:\"mb-2\",children:radios.map(function(radio,idx){return/*#__PURE__*/_jsx(ToggleButton,{id:\"radio-\".concat(idx),type:\"radio\",variant:\"secondary\",name:\"radio\",value:radio.value.toString(),checked:radioValue===radio.value.toString(),onChange:function onChange(e){return setRadioValue(e.currentTarget.value);},children:radio.name},idx);})}),radioValue==='true'?/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formBasicName\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter The Time Interval in Minutes. Leave this field blank if you want 1min time interval. Do not enter string like sec/min only enter number \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter time\",name:\"name\",value:time,onChange:handleTime})]}):/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formBasicName\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter The Total Time In Minutes. Leave this field blank if you want 30min total time. Do not enter string like sec/min only enter number\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter time \",name:\"name\",value:time,onChange:handleTime})]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formBasicName\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter Exam Date :\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"DD/MM/YYYY\",name:\"name\",value:examDate,onChange:handleDate})]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:examHandler,children:\"Next\"})]})});}};return/*#__PURE__*/_jsx(_Fragment,{children:renderForm()});}export default CreateExam;","map":{"version":3,"names":["React","useState","Container","Form","Button","ButtonGroup","ToggleButton","CreateQuestionForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CreateExam","_useState","_useState2","_slicedToArray","examName","setExamName","_useState3","_useState4","show","setShow","_useState5","_useState6","radioValue","setRadioValue","_useState7","_useState8","time","setTime","_useState9","_useState10","examDate","setExamDate","radios","name","value","handleChange","e","target","handleTime","handleDate","examHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","exam_name","exam_type","exam_time","exam_date","res","wrap","_callee$","_context","prev","next","preventDefault","fetch","method","headers","body","JSON","stringify","sent","status","window","alert","stop","_x","apply","arguments","renderForm","children","className","Group","controlId","Label","Control","type","placeholder","onChange","map","radio","idx","id","concat","variant","toString","checked","currentTarget","onClick"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/CreateExam.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {Container,Form,Button,ButtonGroup,ToggleButton} from 'react-bootstrap'\r\nimport CreateQuestionForm from './CreateQuestion';\r\n\r\nfunction CreateExam() {\r\n    const [examName,setExamName] = useState(\"\");\r\n    const [show,setShow] = useState(false)\r\n    const [radioValue, setRadioValue] = useState(false);\r\n    const [time,setTime] = useState( );\r\n    const [examDate,setExamDate] = useState()\r\n    // console.log(radioValue)\r\n    const radios = [\r\n      { name: 'Total 30min', value: false },\r\n      { name: 'One by One', value: true },\r\n    ];\r\n\r\n    const handleChange = (e) =>{\r\n      setExamName(e.target.value)\r\n    }\r\n    const handleTime = (e) =>{\r\n      setTime(e.target.value)\r\n    }\r\n    const handleDate = (e) =>{\r\n      setExamDate(e.target.value)\r\n    }\r\n\r\n    const examHandler = async(e) => {\r\n      e.preventDefault();\r\n      const exam_name = examName;\r\n      // console.log(exam_name)\r\n      const exam_type = radioValue === 'true';\r\n      const exam_time = time==null? exam_type ? 1 :30 : time ;\r\n      const exam_date = examDate;\r\n\r\n      const res = await fetch('/api/exam/createExam',{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({exam_name,exam_type,exam_time,exam_date})\r\n      });\r\n\r\n      // const data = await res.json();\r\n      // console.log(res)\r\n      if(res.status === 400 || res.status ===422 || !res){\r\n        window.alert(\"error occured...\")\r\n      }else{\r\n        setShow(true)\r\n      }\r\n    }\r\n\r\n    const renderForm = () =>{\r\n      if(show){\r\n        return(\r\n          <CreateQuestionForm examName={examName}/>\r\n        )\r\n       }else{\r\n        return(\r\n          <Container>\r\n          <Form className=\"registerform\">\r\n            <h1>Set Examination Name</h1>\r\n            <h5>Please set a unique Examination name</h5>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter name\"\r\n                name='name'\r\n                value={examName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group> <br/>\r\n            <h6>The below toggle button is used to set the exam type, \r\n            If Total 30min is selected then after 30m the form will be auto submitted. \r\n            If One by One is selected then each quesion will be fetched One by One with 1min. time interval.</h6>\r\n            <ButtonGroup className=\"mb-2\">\r\n         {radios.map((radio, idx) => (\r\n          <ToggleButton\r\n            key={idx}\r\n            id={`radio-${idx}`}\r\n            type=\"radio\"\r\n            variant=\"secondary\"\r\n            name=\"radio\"\r\n            value={radio.value.toString()}\r\n            checked={radioValue === radio.value.toString()}\r\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n          >\r\n            {radio.name}\r\n          </ToggleButton>\r\n          \r\n        ))}\r\n      </ButtonGroup>                        \r\n      {radioValue==='true'?\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n              <Form.Label>Enter The Time Interval in Minutes. Leave this field blank if you want 1min time interval. Do not enter string like sec/min only enter number </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter time\"\r\n                name='name'\r\n                value={time}\r\n                onChange={handleTime}\r\n              />\r\n            </Form.Group> : <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n              <Form.Label>Enter The Total Time In Minutes. Leave this field blank if you want 30min total time. Do not enter string like sec/min only enter number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter time \"\r\n                name='name'\r\n                value={time}\r\n                onChange={handleTime}\r\n              />\r\n            </Form.Group> } <br/>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n              <Form.Label>Enter Exam Date :</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"DD/MM/YYYY\"\r\n                name='name'\r\n                value={examDate}\r\n                onChange={handleDate}\r\n              />\r\n            </Form.Group> <br/>\r\n            <Button variant=\"primary\" onClick={examHandler}>\r\n              Next\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n        );\r\n       }\r\n    }\r\n\r\n  return (\r\n    <>\r\n       {renderForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateExam"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}