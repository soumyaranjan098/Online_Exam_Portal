{"ast":null,"code":"import { legacy_createStore as createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { registerUserReducer, loadingReducer, getAllUserReducer, loginUserReducer, logoutUserReducer, authReducer } from './Reducers/userReducer';\nconst Cookies = require('js-cookie');\nconst user = Cookies.get('jwtoken') !== undefined ? true : false;\nconst token = Cookies.get('jwtoken');\nconsole.log(token);\nconst rootReducer = combineReducers({\n  registerUserReducer: registerUserReducer,\n  loadingReducer: loadingReducer,\n  getAllUserReducer: getAllUserReducer,\n  loginUserReducer: loginUserReducer,\n  logoutUserReducer: logoutUserReducer,\n  authReducer: authReducer\n});\nconst initilState = {\n  loginUserReducer: {\n    token: token\n  },\n  authReducer: {\n    isAuthenticated: user\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initilState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","registerUserReducer","loadingReducer","getAllUserReducer","loginUserReducer","logoutUserReducer","authReducer","Cookies","require","user","get","undefined","token","console","log","rootReducer","initilState","isAuthenticated","middleware","store"],"sources":["E:/project/Mern-Quiz-App/client/src/store.js"],"sourcesContent":["import {legacy_createStore as createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { registerUserReducer,loadingReducer,getAllUserReducer,loginUserReducer,logoutUserReducer,authReducer} from './Reducers/userReducer'\r\nconst Cookies = require('js-cookie');\r\n\r\n\r\nconst user = Cookies.get('jwtoken') !== undefined ? true : false;\r\nconst token = Cookies.get('jwtoken')\r\nconsole.log(token)\r\nconst rootReducer = combineReducers({\r\n    registerUserReducer: registerUserReducer,\r\n    loadingReducer: loadingReducer,\r\n    getAllUserReducer: getAllUserReducer,\r\n    loginUserReducer: loginUserReducer,\r\n    logoutUserReducer : logoutUserReducer,\r\n    authReducer : authReducer,\r\n})\r\n\r\nconst initilState = {\r\n    loginUserReducer:{\r\n        token: token\r\n    },\r\n    authReducer:{\r\n        isAuthenticated: user\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer,initilState,composeWithDevTools(applyMiddleware(...middleware)));\r\nexport default store;"],"mappings":"AAAA,SAAQA,kBAAkB,IAAIC,WAAW,EAACC,eAAe,EAACC,eAAe,QAAO,OAAO;AACvF,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAASC,mBAAmB,EAACC,cAAc,EAACC,iBAAiB,EAACC,gBAAgB,EAACC,iBAAiB,EAACC,WAAW,QAAO,wBAAwB;AAC3I,MAAMC,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AAGpC,MAAMC,IAAI,GAAGF,OAAO,CAACG,GAAG,CAAC,SAAS,CAAC,KAAKC,SAAS,GAAG,IAAI,GAAG,KAAK;AAChE,MAAMC,KAAK,GAAGL,OAAO,CAACG,GAAG,CAAC,SAAS,CAAC;AACpCG,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;AAClB,MAAMG,WAAW,GAAGlB,eAAe,CAAC;EAChCI,mBAAmB,EAAEA,mBAAmB;EACxCC,cAAc,EAAEA,cAAc;EAC9BC,iBAAiB,EAAEA,iBAAiB;EACpCC,gBAAgB,EAAEA,gBAAgB;EAClCC,iBAAiB,EAAGA,iBAAiB;EACrCC,WAAW,EAAGA;AAClB,CAAC,CAAC;AAEF,MAAMU,WAAW,GAAG;EAChBZ,gBAAgB,EAAC;IACbQ,KAAK,EAAEA;EACX,CAAC;EACDN,WAAW,EAAC;IACRW,eAAe,EAAER;EACrB;AACJ,CAAC;AAED,MAAMS,UAAU,GAAG,CAACnB,KAAK,CAAC;AAE1B,MAAMoB,KAAK,GAAGvB,WAAW,CAACmB,WAAW,EAACC,WAAW,EAAChB,mBAAmB,CAACF,eAAe,CAAC,GAAGoB,UAAU,CAAC,CAAC,CAAC;AACtG,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}