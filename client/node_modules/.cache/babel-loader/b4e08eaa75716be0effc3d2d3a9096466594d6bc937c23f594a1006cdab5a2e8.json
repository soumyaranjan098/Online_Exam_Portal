{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\User\\\\ReviewResult.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Modal, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllQuestions } from '../../Actions/examAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ReviewResult(_ref) {\n  let {\n    exam_id,\n    answers,\n    handleClose\n  } = _ref;\n  // console.log(exam_id)\n  //   const dispatch = useDispatch();\n  //   const QuestionsData = useSelector((state) => state.getAllQuestionsReducer);\n  //   const { Questions, loading, error } = QuestionsData;\n  // console.log(Questions)\n  //   const [show, setShow] = useState(false);\n\n  //   const handleClose = () => setShow(false);\n  //   const handleShow = () => setShow(true);\n\n  //   useEffect(() => {\n  //     console.log(\"cl\")\n  //     if(exam_id){\n  //       dispatch(getAllQuestions(exam_id));\n  //     }\n\n  //   },[exam_id,dispatch]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Correct Answer is displayed in \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            children: \"Green colour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 55\n          }, this), \" and worng answer given by Student is displayed in \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Red colour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 155\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = ReviewResult;\nexport default ReviewResult;\nvar _c;\n$RefreshReg$(_c, \"ReviewResult\");","map":{"version":3,"names":["React","useEffect","useState","Button","Modal","Row","useDispatch","useSelector","getAllQuestions","jsxDEV","_jsxDEV","Fragment","_Fragment","ReviewResult","_ref","exam_id","answers","handleClose","children","size","onHide","Header","closeButton","Title","style","color","fileName","_jsxFileName","lineNumber","columnNumber","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/User/ReviewResult.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {  Button,Modal, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllQuestions } from '../../Actions/examAction';\r\n\r\nfunction ReviewResult({exam_id,answers,handleClose}) {\r\n  // console.log(exam_id)\r\n  //   const dispatch = useDispatch();\r\n  //   const QuestionsData = useSelector((state) => state.getAllQuestionsReducer);\r\n  //   const { Questions, loading, error } = QuestionsData;\r\n  // console.log(Questions)\r\n  //   const [show, setShow] = useState(false);\r\n  \r\n  //   const handleClose = () => setShow(false);\r\n  //   const handleShow = () => setShow(true);\r\n  \r\n  //   useEffect(() => {\r\n  //     console.log(\"cl\")\r\n  //     if(exam_id){\r\n  //       dispatch(getAllQuestions(exam_id));\r\n  //     }\r\n      \r\n  //   },[exam_id,dispatch]);\r\n\r\n\r\n  return (\r\n    <>\r\n        <Modal size=\"lg\"  onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Correct Answer is displayed in <span style={{color:\"green\"}}>Green colour</span> and worng answer given by Student is displayed in <span style={{color:\"red\"}}>Red colour</span>  </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* {Questions &&\r\n            Questions[0].questions.map((question, index) => (\r\n              <div key={index}>\r\n                <Row>\r\n                  <h4 style={{color:\"blue\",textShadow:\"2px 3px 2px lightgray\",fontFamily:\"sans-serif \"}}>({index + 1}): {question.title}</h4>\r\n                  {question.options.map((option, optionIndex) => {\r\n                    const isCorrect = question.answer === optionIndex;\r\n                    const isAnswered = answers !== null ? answers[index] === optionIndex : null;\r\n\r\n                    return (\r\n                      <div key={optionIndex}>\r\n                        <h5 style={{ color: isCorrect ? 'green' : isAnswered ? 'red' : 'inherit' }}>\r\n                          {option}\r\n                        </h5>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </Row>\r\n              </div>\r\n            ))} */}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReviewResult"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAUC,MAAM,EAACC,KAAK,EAAEC,GAAG,QAAQ,iBAAiB;AACpD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,SAASC,YAAYA,CAAAC,IAAA,EAAgC;EAAA,IAA/B;IAACC,OAAO;IAACC,OAAO;IAACC;EAAW,CAAC,GAAAH,IAAA;EACjD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAGA,oBACEJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACIR,OAAA,CAACN,KAAK;MAACe,IAAI,EAAC,IAAI;MAAEC,MAAM,EAAEH,WAAY;MAAAC,QAAA,gBACtCR,OAAA,CAACN,KAAK,CAACiB,MAAM;QAACC,WAAW;QAAAJ,QAAA,eACvBR,OAAA,CAACN,KAAK,CAACmB,KAAK;UAAAL,QAAA,GAAC,iCAA+B,eAAAR,OAAA;YAAMc,KAAK,EAAE;cAACC,KAAK,EAAC;YAAO,CAAE;YAAAP,QAAA,EAAC;UAAY;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,uDAAmD,eAAAnB,OAAA;YAAMc,KAAK,EAAE;cAACC,KAAK,EAAC;YAAK,CAAE;YAAAP,QAAA,EAAC;UAAU;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,MAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjM,CAAC,eACfnB,OAAA,CAACN,KAAK,CAAC0B,IAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqBC,CAAC,eACbnB,OAAA,CAACN,KAAK,CAAC2B,MAAM;QAAAb,QAAA,eACXR,OAAA,CAACP,MAAM;UAAC6B,OAAO,EAAC,WAAW;UAACC,OAAO,EAAEhB,WAAY;UAAAC,QAAA,EAAC;QAElD;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACR,CAAC;AAEP;AAACK,EAAA,GAxDQrB,YAAY;AA0DrB,eAAeA,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}