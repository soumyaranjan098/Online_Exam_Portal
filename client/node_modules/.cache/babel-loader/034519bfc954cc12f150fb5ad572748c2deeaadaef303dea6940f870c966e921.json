{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\Admin\\\\CreateExam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateExam(_ref) {\n  _s();\n  let {\n    onNavigate\n  } = _ref;\n  const [examName, setExamName] = useState(\"\");\n  const handleChange = e => {\n    setExamName(e.target.value);\n  };\n  const examHandler = async e => {\n    e.preventDefault();\n    const exam_name = examName;\n    // console.log(exam_name)\n\n    const res = await fetch('/api/exam/createExam', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        exam_name\n      })\n    });\n\n    // const data = await res.json();\n    // console.log(res)\n    if (res.status === 400 || res.status === 422 || !res) {\n      window.alert(\"error occured...\");\n    } else {\n      console.log(\"called\");\n      onNavigate();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"registerform\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Set Examination Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Please set a unique Examination name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"enter name\",\n            name: \"name\",\n            value: examName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: examHandler,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CreateExam, \"KWnAlPDfpxGYYpEFxXMAu7GMjN8=\");\n_c = CreateExam;\nexport default CreateExam;\nvar _c;\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"names":["React","useState","Container","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateExam","_ref","_s","onNavigate","examName","setExamName","handleChange","e","target","value","examHandler","preventDefault","exam_name","res","fetch","method","headers","body","JSON","stringify","status","window","alert","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","name","onChange","variant","onClick","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/CreateExam.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {Container,Form,Button} from 'react-bootstrap'\r\n\r\nfunction CreateExam({ onNavigate }) {\r\n    const [examName,setExamName] = useState(\"\");\r\n\r\n\r\n    const handleChange = (e) =>{\r\n      setExamName(e.target.value)\r\n    }\r\n\r\n    const examHandler = async(e) => {\r\n      e.preventDefault();\r\n      const exam_name = examName;\r\n      // console.log(exam_name)\r\n\r\n      const res = await fetch('/api/exam/createExam',{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({exam_name})\r\n      });\r\n\r\n      // const data = await res.json();\r\n      // console.log(res)\r\n      if(res.status === 400 || res.status ===422 || !res){\r\n        window.alert(\"error occured...\")\r\n      }else{\r\n        console.log(\"called\")\r\n        onNavigate();\r\n      }\r\n    }\r\n\r\n  return (\r\n      <>\r\n        <Container>\r\n          <Form className=\"registerform\">\r\n            <h1>Set Examination Name</h1>\r\n            <h5>Please set a unique Examination name</h5>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter name\"\r\n                name='name'\r\n                value={examName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>                        \r\n  \r\n            <Button variant=\"primary\" onClick={examHandler}>\r\n              Next\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateExam"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}