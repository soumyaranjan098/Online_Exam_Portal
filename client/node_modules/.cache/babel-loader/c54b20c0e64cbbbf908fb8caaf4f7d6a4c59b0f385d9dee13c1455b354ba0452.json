{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\Admin\\\\CreateQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateQuestionForm = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    title: \"\",\n    options: [\"\", \"\", \"\", \"\"],\n    answerIndex: 0\n  }]);\n  const handleQuestionChange = (index, field, value) => {\n    const updatedQuestion = [...questions];\n    updatedQuestion[index][field] = value;\n    setQuestions(updatedQuestion);\n  };\n  const handleOptionChange = (index, optionIndex, value) => {\n    const updatedQuestion = [...questions];\n    updatedQuestion[index].options[optionIndex] = value;\n    setQuestions(updatedQuestion);\n  };\n  const handleDeleteQuestion = index => {\n    const updatedQuestion = [...questions];\n    updatedQuestion.splice(index, 1);\n    setQuestions(updatedQuestion);\n  };\n  const handleAddQuestions = () => {\n    const newQuestion = {\n      title: \"\",\n      option: [\"\", \"\", \"\", \"\"],\n      answerIndex: 0\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Question \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: question.title,\n          type: \"text\",\n          placeholder: \"Question Title\",\n          onChange: e => handleQuestionChange(index, 'title', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Options:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            onChange: e => handleOptionChange(index, optionIndex, e.target.value),\n            placeholder: `Option ${optionIndex + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: question.answerIndex,\n          onChange: e => handleQuestionChange(index, 'answerIndex', parseInt(e.target.value)),\n          children: question.options.map((_, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: optionIndex,\n            children: [\"Option \", optionIndex + 1]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDeleteQuestion(index),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddQuestions,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CreateQuestionForm, \"qe3Zb3frwaqMQSoo8v3L9jHtOAE=\");\n_c = CreateQuestionForm;\nexport default CreateQuestionForm;\nvar _c;\n$RefreshReg$(_c, \"CreateQuestionForm\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateQuestionForm","_s","questions","setQuestions","title","options","answerIndex","handleQuestionChange","index","field","value","updatedQuestion","handleOptionChange","optionIndex","handleDeleteQuestion","splice","handleAddQuestions","newQuestion","option","children","map","question","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","parseInt","_","onClick","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/CreateQuestion.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CreateQuestionForm = () => {\r\n  \r\n    const [questions , setQuestions] = useState([\r\n        {\r\n            title: \"\",\r\n            options:[\"\",\"\",\"\",\"\"],\r\n            answerIndex:0\r\n        }\r\n    ]);\r\n\r\n    const handleQuestionChange = (index,field,value) =>{\r\n        const updatedQuestion = [...questions];\r\n        updatedQuestion[index][field] = value\r\n        setQuestions(updatedQuestion);\r\n    }\r\n\r\n    const handleOptionChange = (index,optionIndex,value) => {\r\n        const updatedQuestion = [...questions];\r\n        updatedQuestion[index].options[optionIndex] = value;\r\n        setQuestions(updatedQuestion)\r\n    }\r\n\r\n    const handleDeleteQuestion = (index) =>{\r\n        const updatedQuestion = [...questions];\r\n        updatedQuestion.splice(index,1);\r\n        setQuestions(updatedQuestion);\r\n    }\r\n\r\n    const handleAddQuestions = () => {\r\n        const newQuestion = {\r\n            title : \"\",\r\n            option: [\"\",\"\",\"\",\"\"],\r\n            answerIndex: 0\r\n        }\r\n\r\n        setQuestions([...questions,newQuestion]);\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div>\r\n            {questions.map((question,index)=>(\r\n                <div key={index}>\r\n                <h2>Question {index+1}</h2>\r\n               <input \r\n                    value={question.title}\r\n                    type='text'\r\n                    placeholder='Question Title'\r\n                    onChange={(e)=> handleQuestionChange(index,'title',e.target.value)}\r\n               />\r\n               <h4>Options:</h4>\r\n              {question.options.map((option,optionIndex)=>(\r\n                <div key={optionIndex}>\r\n                <input \r\n                    type='text'\r\n                    value={option} \r\n                    onChange={(e)=>handleOptionChange(index,optionIndex,e.target.value) } \r\n                    placeholder= {`Option ${optionIndex+1}`}\r\n                />\r\n                </div>\r\n                ))}\r\n            <h4>Answer:</h4>\r\n            <select\r\n                value={question.answerIndex}\r\n                onChange={(e)=>handleQuestionChange(index,'answerIndex',parseInt(e.target.value))}>\r\n                {question.options.map((_,optionIndex)=>(\r\n                    <option key={optionIndex} value={optionIndex} >\r\n                        Option {optionIndex+1}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <Button onClick={()=>handleDeleteQuestion(index)}>DELETE</Button>\r\n                </div>\r\n            ))}\r\n            <Button onClick={handleAddQuestions}>ADD</Button>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateQuestionForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}