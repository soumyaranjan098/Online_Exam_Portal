{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\Admin\\\\CreateExam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button, ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport CreateQuestionForm from './CreateQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateExam() {\n  _s();\n  const [examName, setExamName] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [radioValue, setRadioValue] = useState('false');\n  const [time, setTime] = useState();\n  // console.log(radioValue)\n  const radios = [{\n    name: 'Total 30min',\n    value: 'false'\n  }, {\n    name: 'One by One',\n    value: 'true'\n  }];\n  const handleChange = e => {\n    setExamName(e.target.value);\n  };\n  const handleTime = e => {\n    setTime(e.target.value);\n  };\n  const examHandler = async e => {\n    e.preventDefault();\n    const exam_name = examName;\n    // console.log(exam_name)\n\n    const res = await fetch('/api/exam/createExam', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        exam_name\n      })\n    });\n\n    // const data = await res.json();\n    // console.log(res)\n    if (res.status === 400 || res.status === 422 || !res) {\n      window.alert(\"error occured...\");\n    } else {\n      setShow(true);\n    }\n  };\n  const renderForm = () => {\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(CreateQuestionForm, {\n        examName: examName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"registerform\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Set Examination Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Please set a unique Examination name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"enter name\",\n              name: \"name\",\n              value: examName,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"The below toggle button is used to set the exam type, If Total 30min is selected then after 30m the form will be auto submitted. If One by One is selected then each quesion will be fetched One by One with 30sec. time interval.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            className: \"mb-2\",\n            children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              id: `radio-${idx}`,\n              type: \"radio\",\n              variant: \"secondary\",\n              name: \"radio\",\n              value: radio.value,\n              checked: radioValue === radio.value,\n              onChange: e => setRadioValue(e.currentTarget.value),\n              children: radio.name\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), radioValue === 'true' ? /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"enter name\",\n              name: \"name\",\n              value: time,\n              onChange: handleTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"enter name\",\n              name: \"name\",\n              value: time,\n              onChange: handleTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: examHandler,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderForm()\n  }, void 0, false);\n}\n_s(CreateExam, \"kJLk3cnFqyMwvtPXoOnTTtJdjRg=\");\n_c = CreateExam;\nexport default CreateExam;\nvar _c;\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"names":["React","useState","Container","Form","Button","ButtonGroup","ToggleButton","CreateQuestionForm","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateExam","_s","examName","setExamName","show","setShow","radioValue","setRadioValue","time","setTime","radios","name","value","handleChange","e","target","handleTime","examHandler","preventDefault","exam_name","res","fetch","method","headers","body","JSON","stringify","status","window","alert","renderForm","fileName","_jsxFileName","lineNumber","columnNumber","children","className","Group","controlId","Label","Control","type","placeholder","onChange","map","radio","idx","id","variant","checked","currentTarget","onClick","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/CreateExam.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {Container,Form,Button,ButtonGroup,ToggleButton} from 'react-bootstrap'\r\nimport CreateQuestionForm from './CreateQuestion';\r\n\r\nfunction CreateExam() {\r\n    const [examName,setExamName] = useState(\"\");\r\n    const [show,setShow] = useState(false)\r\n    const [radioValue, setRadioValue] = useState('false');\r\n    const [time,setTime] = useState( );\r\n    // console.log(radioValue)\r\n    const radios = [\r\n      { name: 'Total 30min', value: 'false' },\r\n      { name: 'One by One', value: 'true' },\r\n    ];\r\n\r\n    const handleChange = (e) =>{\r\n      setExamName(e.target.value)\r\n    }\r\n    const handleTime = (e) =>{\r\n      setTime(e.target.value)\r\n    }\r\n\r\n    const examHandler = async(e) => {\r\n      e.preventDefault();\r\n      const exam_name = examName;\r\n      // console.log(exam_name)\r\n\r\n      const res = await fetch('/api/exam/createExam',{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({exam_name})\r\n      });\r\n\r\n      // const data = await res.json();\r\n      // console.log(res)\r\n      if(res.status === 400 || res.status ===422 || !res){\r\n        window.alert(\"error occured...\")\r\n      }else{\r\n        setShow(true)\r\n      }\r\n    }\r\n\r\n    const renderForm = () =>{\r\n      if(show){\r\n        return(\r\n          <CreateQuestionForm examName={examName}/>\r\n        )\r\n       }else{\r\n        return(\r\n          <Container>\r\n          <Form className=\"registerform\">\r\n            <h1>Set Examination Name</h1>\r\n            <h5>Please set a unique Examination name</h5>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter name\"\r\n                name='name'\r\n                value={examName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group> <br/>\r\n            <h6>The below toggle button is used to set the exam type, \r\n            If Total 30min is selected then after 30m the form will be auto submitted. \r\n            If One by One is selected then each quesion will be fetched One by One with 30sec. time interval.</h6>\r\n            <ButtonGroup className=\"mb-2\">\r\n         {radios.map((radio, idx) => (\r\n          <ToggleButton\r\n            key={idx}\r\n            id={`radio-${idx}`}\r\n            type=\"radio\"\r\n            variant=\"secondary\"\r\n            name=\"radio\"\r\n            value={radio.value}\r\n            checked={radioValue === radio.value}\r\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n          >\r\n            {radio.name}\r\n          </ToggleButton>\r\n          \r\n        ))}\r\n      </ButtonGroup>                        \r\n      {radioValue==='true'?\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter name\"\r\n                name='name'\r\n                value={time}\r\n                onChange={handleTime}\r\n              />\r\n            </Form.Group> : <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter name\"\r\n                name='name'\r\n                value={time}\r\n                onChange={handleTime}\r\n              />\r\n            </Form.Group> }   \r\n            <Button variant=\"primary\" onClick={examHandler}>\r\n              Next\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n        );\r\n       }\r\n    }\r\n\r\n  return (\r\n    <>\r\n       {renderForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateExam"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}