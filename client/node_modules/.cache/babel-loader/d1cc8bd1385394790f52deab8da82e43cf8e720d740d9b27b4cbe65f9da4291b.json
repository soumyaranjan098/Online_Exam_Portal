{"ast":null,"code":"import _slicedToArray from\"E:/project/Mern-Quiz-App/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Button,Table,Modal,Row}from'react-bootstrap';import{getAllExams}from'../../Actions/examAction';import{useSelector,useDispatch}from'react-redux';import Loader from'../Loader';import Error from'../Error';import{useNavigate}from'react-router-dom';import{getResultByUserIds}from'../../Actions/examAction';import{getAllQuestions}from'../../Actions/examAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function UserHome(){var dispatch=useDispatch();var examState=useSelector(function(state){return state.getExamReducer;});var loading=examState.loading,error=examState.error,Allexam=examState.Allexam;var navigate=useNavigate();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),results=_useState2[0],setResults=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),answers=_useState4[0],setAnswers=_useState4[1];var UserData=useSelector(function(state){return state.getResultByUserIdsReducer;});var Results=UserData.Results;var QuestionsData=useSelector(function(state){return state.getAllQuestionsReducer;});var Questions=QuestionsData.Questions;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),show=_useState6[0],setShow=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),selectedExamId=_useState8[0],setSelectedExamId=_useState8[1];var handleReviewClick=function handleReviewClick(examId){setSelectedExamId(examId);setShow(true);};var handleReviewClose=function handleReviewClose(){setShow(false);};useEffect(function(){if(selectedExamId!==null){dispatch(getAllQuestions({\"exam_id\":selectedExamId}));}},[selectedExamId,dispatch]);// console.log(Results);\n// const fetchResult = async (exam_id) => {\n//   const res = await fetch('/api/result/getResultByUserId', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify({ exam_id }),\n//   }).then((data) => { return data.json()});\n//   // console.log(res[0].percentage)\n//   return res[0]?.percentage ?? null;\n// };\n/////////////////////////// Fetching All exam details //////////////////\nuseEffect(function(){dispatch(getAllExams());},[dispatch]);// useEffect(() => {\n//   if (Allexam) {\n//     Allexam.forEach((exam) => {\n//       fetchResult(exam._id)\n//         .then((result) => {\n//           setResults((prevState) => ({\n//             ...prevState,\n//             [exam._id]: result,\n//           }));\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching result:', error);\n//           setResults((prevState) => ({\n//             ...prevState,\n//             [exam._id]: null, // Set null for the exam ID if there is an error\n//           }));\n//         });\n//     });\n//   }\n// }, [Allexam]);\n////////////////////////////   Fetching Students Result/////////////////////\nuseEffect(function(){if(Allexam){var user_ids=Allexam.map(function(exam){return exam._id;});dispatch(getResultByUserIds(user_ids));}},[Allexam,dispatch]);///////////////////////         Getting the results Array     ////////////////////\nuseEffect(function(){if(Allexam&&Results){var examResult={};var answerData={};Allexam.forEach(function(exam){var result=Results.find(function(result){if(result===null){return null;}else{return result.exam_id===exam._id;}});examResult[exam._id]=result?result.percentage:null;answerData[exam._id]=result?result.answers:null;});//  console.log(examResult)\n// console.log(answerData)\nsetResults(examResult);setAnswers(answerData);}},[Allexam,Results]);//  console.log(results)\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[loading&&/*#__PURE__*/_jsx(Loader,{}),error&&/*#__PURE__*/_jsx(Error,{error:\"Error While Fetching Users\"}),/*#__PURE__*/_jsx(\"div\",{style:{padding:'6rem',backgroundColor:\"white\"},children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Exam Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Teacher Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Exam Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Start Exam\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Result\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Review Answers\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Allexam&&Allexam.map(function(exam){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:exam.exam_name}),/*#__PURE__*/_jsx(\"td\",{children:exam.teacher_name}),/*#__PURE__*/_jsx(\"td\",{children:exam.exam_date}),/*#__PURE__*/_jsx(\"td\",{children:results[exam._id]===null?/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return navigate(\"/examination/\".concat(exam._id));},children:\"Start\"}):\"Completed\"}),/*#__PURE__*/_jsx(\"td\",{children:results[exam._id]===null?'Not Available':results[exam._id]}),/*#__PURE__*/_jsx(\"td\",{children:results[exam._id]===null?'Not Available':/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handleReviewClick(exam._id);},children:\"Review\"})})]},exam._id);})})]})}),show&&/*#__PURE__*/_jsxs(Modal,{size:\"lg\",show:show,onHide:handleReviewClose,\"aria-labelledby\":\"example-modal-sizes-title-lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[\"Correct Answer is displayed in \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"green\"},children:\"Green colour\"}),\" and worng answer given by Student is displayed in \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:\"Red colour\"})]})}),/*#__PURE__*/_jsx(Modal.Body,{children:Questions&&Questions[0].questions.map(function(question,index){return/*#__PURE__*/_jsx(\"div\",{style:{boxShadow:\"2px 2px 5px gray\",marginBottom:\"1rem\",padding:\"1rem\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:\"blue\",textShadow:\"2px 3px 2px lightgray\",fontFamily:\"sans-serif \"},children:[index+1,\" : \",question.title]}),question.options.map(function(option,optionIndex){var isCorrect=question.answer===optionIndex;var isAnswered=answers[selectedExamId]!==undefined?answers[selectedExamId][index]===optionIndex:null;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h5\",{style:{color:isCorrect?\"green\":isAnswered?\"red\":\"inherit\"},children:option})});}),answers[selectedExamId]!==undefined&&answers[selectedExamId][0]===null||answers[selectedExamId][index]===null?/*#__PURE__*/_jsx(\"h6\",{style:{color:\"red\"},children:\"Not answered\"}):null]})},index);})}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleReviewClose,children:\"Close\"})})]})]});}export default UserHome;","map":{"version":3,"names":["React","useEffect","useState","Button","Table","Modal","Row","getAllExams","useSelector","useDispatch","Loader","Error","useNavigate","getResultByUserIds","getAllQuestions","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UserHome","dispatch","examState","state","getExamReducer","loading","error","Allexam","navigate","_useState","_useState2","_slicedToArray","results","setResults","_useState3","_useState4","answers","setAnswers","UserData","getResultByUserIdsReducer","Results","QuestionsData","getAllQuestionsReducer","Questions","_useState5","_useState6","show","setShow","_useState7","_useState8","selectedExamId","setSelectedExamId","handleReviewClick","examId","handleReviewClose","user_ids","map","exam","_id","examResult","answerData","forEach","result","find","exam_id","percentage","children","style","padding","backgroundColor","exam_name","teacher_name","exam_date","onClick","concat","size","onHide","Header","closeButton","Title","color","Body","questions","question","index","boxShadow","marginBottom","textShadow","fontFamily","title","options","option","optionIndex","isCorrect","answer","isAnswered","undefined","Footer","variant"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/User/UserHome.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Table,Modal, Row } from 'react-bootstrap';\r\nimport { getAllExams } from '../../Actions/examAction';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Loader from '../Loader';\r\nimport Error from '../Error';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getResultByUserIds } from '../../Actions/examAction';\r\nimport { getAllQuestions } from '../../Actions/examAction';\r\n\r\n\r\nfunction UserHome() {\r\n  const dispatch = useDispatch();\r\n  const examState = useSelector((state) => state.getExamReducer);\r\n  const { loading, error, Allexam } = examState;\r\n  const navigate = useNavigate();\r\n\r\n  const [results, setResults] = useState({});\r\n  const [answers,setAnswers] = useState({});\r\n\r\n  const UserData = useSelector((state) => state.getResultByUserIdsReducer);\r\n  const {Results} = UserData;\r\n  const QuestionsData = useSelector((state) => state.getAllQuestionsReducer);\r\n  const { Questions } = QuestionsData;\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [selectedExamId, setSelectedExamId] = useState(null);\r\n\r\n\r\n  const handleReviewClick = (examId) => {\r\n    setSelectedExamId(examId);\r\n    setShow(true);\r\n  };\r\n  \r\nconst handleReviewClose = () => {\r\n  setShow(false);\r\n};\r\n\r\nuseEffect(()=>{\r\n  if(selectedExamId !== null){\r\n    dispatch(getAllQuestions({\"exam_id\":selectedExamId}));\r\n  }\r\n},[selectedExamId,dispatch])\r\n\r\n  // console.log(Results);\r\n  // const fetchResult = async (exam_id) => {\r\n  //   const res = await fetch('/api/result/getResultByUserId', {\r\n  //     method: 'POST',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //     },\r\n  //     body: JSON.stringify({ exam_id }),\r\n  //   }).then((data) => { return data.json()});\r\n\r\n  //   // console.log(res[0].percentage)\r\n  //   return res[0]?.percentage ?? null;\r\n  // };\r\n\r\n  /////////////////////////// Fetching All exam details //////////////////\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllExams());\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   if (Allexam) {\r\n  //     Allexam.forEach((exam) => {\r\n  //       fetchResult(exam._id)\r\n  //         .then((result) => {\r\n  //           setResults((prevState) => ({\r\n  //             ...prevState,\r\n  //             [exam._id]: result,\r\n  //           }));\r\n  //         })\r\n  //         .catch((error) => {\r\n  //           console.error('Error fetching result:', error);\r\n  //           setResults((prevState) => ({\r\n  //             ...prevState,\r\n  //             [exam._id]: null, // Set null for the exam ID if there is an error\r\n  //           }));\r\n  //         });\r\n  //     });\r\n  //   }\r\n  // }, [Allexam]);\r\n\r\n  ////////////////////////////   Fetching Students Result/////////////////////\r\n  useEffect(()=>{\r\n    if(Allexam){\r\n      const user_ids = Allexam.map((exam)=> exam._id);\r\n      dispatch(getResultByUserIds(user_ids))\r\n    }\r\n  },[Allexam,dispatch])\r\n  \r\n  ///////////////////////         Getting the results Array     ////////////////////\r\n  useEffect(()=>{\r\n    if(Allexam && Results){\r\n      const examResult={};\r\n      const answerData = {};\r\n      Allexam.forEach((exam)=>{\r\n        const result = Results.find((result)=> {\r\n          if(result === null){\r\n            return null;\r\n          }else{\r\n            return result.exam_id === exam._id;\r\n          }\r\n         \r\n        })\r\n        examResult[exam._id] = result ? result.percentage : null;\r\n        answerData[exam._id] = result ? result.answers : null;\r\n      });\r\n      //  console.log(examResult)\r\n      // console.log(answerData)\r\n      setResults(examResult);\r\n      setAnswers(answerData);\r\n    }\r\n  },[Allexam,Results])\r\n//  console.log(results)\r\n\r\n\r\n  return (\r\n\r\n\r\n    <>\r\n      \r\n        {loading && <Loader />}\r\n        {error && <Error error=\"Error While Fetching Users\" />}\r\n        <div style={{ padding: '6rem', backgroundColor:\"white\" }}>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Exam Name</th>\r\n              <th>Teacher Name</th>\r\n              <th>Exam Date</th>\r\n              <th>Start Exam</th>\r\n              <th>Result</th>\r\n              <th>Review Answers</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Allexam &&\r\n              Allexam.map((exam) => (\r\n                <tr key={exam._id}>\r\n                  <td>{exam.exam_name}</td>\r\n                  <td>{exam.teacher_name}</td>\r\n                  <td>{exam.exam_date}</td>\r\n                  <td>\r\n                    {results[exam._id] === null ? <Button onClick={() => navigate(`/examination/${exam._id}`)}>Start</Button> : \"Completed\"}\r\n                  </td>\r\n                  <td>{results[exam._id] === null ? 'Not Available' : results[exam._id]}</td>\r\n                  <td>{results[exam._id] === null ? 'Not Available' : <Button onClick={()=>handleReviewClick(exam._id)}>Review</Button>}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      {/* {showReviewModal && <ReviewResult exam_id={{\"exam_id\":selectedExamId}} answers={answers} handleClose={handleReviewClose} />} */}\r\n      {show && \r\n        <Modal\r\n        size=\"lg\"\r\n         show={show}\r\n         onHide={handleReviewClose}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n          Correct Answer is displayed in <span style={{color:\"green\"}}>Green colour</span> and worng answer given by Student is displayed in <span style={{color:\"red\"}}>Red colour</span> \r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {Questions &&\r\n           Questions[0].questions.map((question,index)=>(\r\n            <div key={index} style={{boxShadow:\"2px 2px 5px gray\",marginBottom:\"1rem\",padding:\"1rem\"}}>\r\n              <Row>\r\n                <h4 style={{color:\"blue\",textShadow:\"2px 3px 2px lightgray\",fontFamily:\"sans-serif \"}}>{index+1} : {question.title}</h4>\r\n                {question.options.map((option,optionIndex)=>{\r\n                  const isCorrect = question.answer === optionIndex;\r\n                  const isAnswered = answers[selectedExamId] !== undefined ? answers[selectedExamId][index] === optionIndex : null;\r\n                  return(\r\n                    <div>\r\n                      <h5 style={{color : isCorrect ? \"green\" : isAnswered ? \"red\" : \"inherit\"}}>{option}</h5>\r\n                    </div>\r\n                  )\r\n                })}\r\n                 {answers[selectedExamId] !== undefined && answers[selectedExamId][0] === null || answers[selectedExamId][index] ===null ? (\r\n          <h6 style={{color:\"red\"}}>Not answered</h6>\r\n        ) : null} \r\n        {/* {answers[selectedExamId] !== undefined ? console.log(answers[selectedExamId]) : null} */}\r\n              </Row>\r\n            </div>\r\n           ))\r\n           }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleReviewClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserHome;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}