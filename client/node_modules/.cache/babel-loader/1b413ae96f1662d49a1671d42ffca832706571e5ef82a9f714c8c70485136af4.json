{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\User\\\\UserHome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Table } from 'react-bootstrap';\nimport { getAllExams } from '../../Actions/examAction';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loader from '../Loader';\nimport Error from '../Error';\nimport { useNavigate } from 'react-router-dom';\nimport { getResultByUserIds } from '../../Actions/examAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const dispatch = useDispatch();\n  const examState = useSelector(state => state.getExamReducer);\n  const {\n    loading,\n    error,\n    Allexam\n  } = examState;\n  const navigate = useNavigate();\n  const [results, setResults] = useState({});\n  const UserData = useSelector(state => state.getResultByUserIdsReducer);\n  const {\n    Results\n  } = UserData;\n  // console.log(Results);\n  // const fetchResult = async (exam_id) => {\n  //   const res = await fetch('/api/result/getResultByUserId', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ exam_id }),\n  //   }).then((data) => { return data.json()});\n\n  //   // console.log(res[0].percentage)\n  //   return res[0]?.percentage ?? null;\n  // };\n\n  /////////////////////////// Fetching All exam details //////////////////\n\n  useEffect(() => {\n    dispatch(getAllExams());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   if (Allexam) {\n  //     Allexam.forEach((exam) => {\n  //       fetchResult(exam._id)\n  //         .then((result) => {\n  //           setResults((prevState) => ({\n  //             ...prevState,\n  //             [exam._id]: result,\n  //           }));\n  //         })\n  //         .catch((error) => {\n  //           console.error('Error fetching result:', error);\n  //           setResults((prevState) => ({\n  //             ...prevState,\n  //             [exam._id]: null, // Set null for the exam ID if there is an error\n  //           }));\n  //         });\n  //     });\n  //   }\n  // }, [Allexam]);\n\n  ////////////////////////////   Fetching Students Result/////////////////////\n  useEffect(() => {\n    if (Allexam) {\n      const user_ids = Allexam.map(exam => exam._id);\n      dispatch(getResultByUserIds(user_ids));\n    }\n  }, [Allexam, dispatch]);\n\n  ///////////////////////         Getting the results Array     ////////////////////\n  useEffect(() => {\n    if (Allexam && Results) {\n      const examResult = {};\n      Allexam.forEach(exam => {\n        const result = Results.find(result => {\n          if (result === null) {\n            return null;\n          } else {\n            return result.exam_id === exam._id;\n          }\n        });\n        examResult[exam._id] = result ? result.percentage : null;\n      });\n      //  console.log(examResult)\n      setResults(examResult);\n    }\n  }, [Allexam, Results]);\n  //  console.log(results)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      error: \"Error While Fetching Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '6rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Teacher Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Allexam && Allexam.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.exam_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.teacher_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.exam_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: results[exam._id] === null ? /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => navigate(`/examination/${exam._id}`),\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 51\n              }, this) : \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: results[exam._id] === null ? 'Not Available' : results[exam._id]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: results[exam._id] === null ? 'Not Available' : /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, exam._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(UserHome, \"3nvRMv5OvpmdkzwPvxeMHRRD+jU=\", false, function () {\n  return [useDispatch, useSelector, useNavigate, useSelector];\n});\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useEffect","useState","Button","Table","getAllExams","useSelector","useDispatch","Loader","Error","useNavigate","getResultByUserIds","jsxDEV","_jsxDEV","Fragment","_Fragment","UserHome","_s","dispatch","examState","state","getExamReducer","loading","error","Allexam","navigate","results","setResults","UserData","getResultByUserIdsReducer","Results","user_ids","map","exam","_id","examResult","forEach","result","find","exam_id","percentage","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","exam_name","teacher_name","exam_date","onClick","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/User/UserHome.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { getAllExams } from '../../Actions/examAction';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Loader from '../Loader';\r\nimport Error from '../Error';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getResultByUserIds } from '../../Actions/examAction';\r\n\r\nfunction UserHome() {\r\n  const dispatch = useDispatch();\r\n  const examState = useSelector((state) => state.getExamReducer);\r\n  const { loading, error, Allexam } = examState;\r\n  const navigate = useNavigate();\r\n\r\n  const [results, setResults] = useState({});\r\n\r\n  const UserData = useSelector((state) => state.getResultByUserIdsReducer);\r\n\r\n  const {Results} = UserData;\r\n  // console.log(Results);\r\n  // const fetchResult = async (exam_id) => {\r\n  //   const res = await fetch('/api/result/getResultByUserId', {\r\n  //     method: 'POST',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //     },\r\n  //     body: JSON.stringify({ exam_id }),\r\n  //   }).then((data) => { return data.json()});\r\n\r\n  //   // console.log(res[0].percentage)\r\n  //   return res[0]?.percentage ?? null;\r\n  // };\r\n\r\n  /////////////////////////// Fetching All exam details //////////////////\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllExams());\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   if (Allexam) {\r\n  //     Allexam.forEach((exam) => {\r\n  //       fetchResult(exam._id)\r\n  //         .then((result) => {\r\n  //           setResults((prevState) => ({\r\n  //             ...prevState,\r\n  //             [exam._id]: result,\r\n  //           }));\r\n  //         })\r\n  //         .catch((error) => {\r\n  //           console.error('Error fetching result:', error);\r\n  //           setResults((prevState) => ({\r\n  //             ...prevState,\r\n  //             [exam._id]: null, // Set null for the exam ID if there is an error\r\n  //           }));\r\n  //         });\r\n  //     });\r\n  //   }\r\n  // }, [Allexam]);\r\n\r\n  ////////////////////////////   Fetching Students Result/////////////////////\r\n  useEffect(()=>{\r\n    if(Allexam){\r\n      const user_ids = Allexam.map((exam)=> exam._id);\r\n      dispatch(getResultByUserIds(user_ids))\r\n    }\r\n  },[Allexam,dispatch])\r\n  \r\n  ///////////////////////         Getting the results Array     ////////////////////\r\n  useEffect(()=>{\r\n    if(Allexam && Results){\r\n      const examResult={}\r\n      Allexam.forEach((exam)=>{\r\n        const result = Results.find((result)=> {\r\n          if(result === null){\r\n            return null;\r\n          }else{\r\n            return result.exam_id === exam._id;\r\n          }\r\n         \r\n        })\r\n        examResult[exam._id] = result ? result.percentage : null;\r\n      });\r\n      //  console.log(examResult)\r\n      setResults(examResult);\r\n    }\r\n  },[Allexam,Results])\r\n//  console.log(results)\r\n\r\n\r\n  return (\r\n    <>\r\n      \r\n        {loading && <Loader />}\r\n        {error && <Error error=\"Error While Fetching Users\" />}\r\n        <div style={{ padding: '6rem' }}>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Exam Name</th>\r\n              <th>Teacher Name</th>\r\n              <th>Exam Date</th>\r\n              <th>Start Exam</th>\r\n              <th>Result</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Allexam &&\r\n              Allexam.map((exam) => (\r\n                <tr key={exam._id}>\r\n                  <td>{exam.exam_name}</td>\r\n                  <td>{exam.teacher_name}</td>\r\n                  <td>{exam.exam_date}</td>\r\n                  <td>\r\n                    {results[exam._id] === null ? <Button onClick={() => navigate(`/examination/${exam._id}`)}>Start</Button> : \"Completed\"}\r\n                  </td>\r\n                  <td>{results[exam._id] === null ? 'Not Available' : results[exam._id]}</td>\r\n                  <td>{results[exam._id] === null ? 'Not Available' : <Button/>}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserHome;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}