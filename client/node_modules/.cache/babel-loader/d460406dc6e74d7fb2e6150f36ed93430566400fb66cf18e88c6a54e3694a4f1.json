{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\Admin\\\\ResultData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Modal, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllQuestions } from '../../Actions/examAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ResultData(_ref) {\n  _s();\n  let {\n    student,\n    percentage,\n    exam_id,\n    answers\n  } = _ref;\n  const dispatch = useDispatch();\n  const QuestionsData = useSelector(state => state.getAllQuestionsReducer);\n  const {\n    Questions,\n    loading,\n    error\n  } = QuestionsData;\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  useEffect(() => {\n    dispatch(getAllQuestions(exam_id));\n  }, [exam_id, dispatch]);\n  const getAnswerStyle = (questionIndex, option) => {\n    const correctAnswer = Questions[0].questions[questionIndex].answer;\n    const userAnswer = answers[questionIndex];\n    if (option === correctAnswer) {\n      return {\n        color: 'green'\n      };\n    } else if (option === userAnswer) {\n      return {\n        color: 'red'\n      };\n    } else {\n      return {\n        color: 'black'\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: student.registration_no\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: answers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleShow,\n          children: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: Questions && Questions[0].questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"(\", index + 1, \"): \", question.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: getAnswerStyle(index, option),\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this)\n            }, optionIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ResultData, \"0f1FqMkFTmqOcXlw6mBr4OIGMeM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ResultData;\nexport default ResultData;\nvar _c;\n$RefreshReg$(_c, \"ResultData\");","map":{"version":3,"names":["React","useEffect","useState","Button","Modal","Row","useDispatch","useSelector","getAllQuestions","jsxDEV","_jsxDEV","Fragment","_Fragment","ResultData","_ref","_s","student","percentage","exam_id","answers","dispatch","QuestionsData","state","getAllQuestionsReducer","Questions","loading","error","show","setShow","handleClose","handleShow","getAnswerStyle","questionIndex","option","correctAnswer","questions","answer","userAnswer","color","children","name","fileName","_jsxFileName","lineNumber","columnNumber","registration_no","onClick","onHide","Header","closeButton","Title","Body","map","question","index","title","options","optionIndex","style","Footer","variant","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/ResultData.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllQuestions } from '../../Actions/examAction';\r\n\r\nfunction ResultData({ student, percentage, exam_id, answers }) {\r\n  const dispatch = useDispatch();\r\n  const QuestionsData = useSelector((state) => state.getAllQuestionsReducer);\r\n  const { Questions, loading, error } = QuestionsData;\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllQuestions(exam_id));\r\n  }, [exam_id, dispatch]);\r\n\r\n  const getAnswerStyle = (questionIndex, option) => {\r\n    const correctAnswer = Questions[0].questions[questionIndex].answer;\r\n    const userAnswer = answers[questionIndex];\r\n\r\n    if (option === correctAnswer) {\r\n      return { color: 'green' };\r\n    } else if (option === userAnswer) {\r\n      return { color: 'red' };\r\n    } else {\r\n      return { color: 'black' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{student.name}</td>\r\n        <td>{student.registration_no}</td>\r\n        <td>{answers[0]}</td>\r\n        <td>\r\n          <Button onClick={handleShow}>Review</Button>\r\n        </td>\r\n      </tr>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {Questions &&\r\n            Questions[0].questions.map((question, index) => (\r\n              <div key={index}>\r\n                <Row>\r\n                  <h4>({index + 1}): {question.title}</h4>\r\n                  {question.options.map((option, optionIndex) => (\r\n                    <div key={optionIndex}>\r\n                      <h5 style={getAnswerStyle(index, option)}>{option}</h5>\r\n                    </div>\r\n                  ))}\r\n                </Row>\r\n              </div>\r\n            ))}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}