{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\Admin\\\\ResultsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getResultByExamId } from '../../Actions/examAction';\nimport { getAllUser } from '../../Actions/userAction';\nimport Loader from '../Loader';\nimport Error from '../Error';\nimport { Table } from 'react-bootstrap';\nimport ResultData from './ResultData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Results(exam_id) {\n  _s();\n  const dispatch = useDispatch();\n  const resultdata = useSelector(state => state.getResultByExamIdReducer);\n  const {\n    Result\n  } = resultdata;\n  // const userData = useSelector((state) => state.getUsersByIdReducer);\n  // const { students, loading, error } = userData;\n  const userData = useSelector(state => state.getAllUserReducer);\n  const {\n    users,\n    loading,\n    error\n  } = userData;\n  const [sortedStudents, setSortedStudents] = useState([]);\n  // console.log(Result)\n  useEffect(() => {\n    dispatch(getResultByExamId(exam_id));\n  }, []);\n  useEffect(() => {\n    if (Result != null) {\n      // const user_ids = Result.map((result) => result.user_id);\n      // dispatch(getUsersById(user_ids));\n      dispatch(getAllUser());\n    }\n  }, [Result, dispatch]);\n\n  // useEffect(() => {\n  //   if (students.length > 0) {\n  //     const sorted = [...students].sort((a, b) => a.registration_no - b.registration_no);\n  //     setSortedStudents(sorted);\n  //   }\n  // }, [students]);\n  useEffect(() => {\n    if (users.length > 0) {\n      const sorted = [...users].sort((a, b) => a.registration_no - b.registration_no);\n      setSortedStudents(sorted);\n    }\n  }, [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: \"6rem\",\n          paddingRight: \"6rem\",\n          paddingTop: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name Of Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Registration No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Review Answers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Result && sortedStudents.map(student => {\n              const res = Result.find(result => result.user_id === student._id);\n              const percentage = res !== undefined ? res.percentage !== undefined ? res.percentage : null : null;\n              const answers = res !== undefined ? res.answers !== undefined ? res.answers : null : null;\n              return /*#__PURE__*/_jsxDEV(ResultData, {\n                student: student,\n                answers: answers,\n                exam_id: exam_id,\n                percentage: percentage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Results, \"QT9VkCUYQQYMIxo51UA8pdh7hf4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","getResultByExamId","getAllUser","Loader","Error","Table","ResultData","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","exam_id","_s","dispatch","resultdata","state","getResultByExamIdReducer","Result","userData","getAllUserReducer","users","loading","error","sortedStudents","setSortedStudents","length","sorted","sort","a","b","registration_no","children","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingLeft","paddingRight","paddingTop","map","student","res","find","result","user_id","_id","percentage","undefined","answers","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/Admin/ResultsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'; \r\nimport { getResultByExamId } from '../../Actions/examAction';\r\nimport { getAllUser } from '../../Actions/userAction';\r\nimport Loader from '../Loader';\r\nimport Error from '../Error';\r\nimport { Table } from 'react-bootstrap';\r\nimport ResultData from './ResultData';\r\n\r\nfunction Results(exam_id) {\r\n  const dispatch = useDispatch();\r\n  const resultdata = useSelector((state) => state.getResultByExamIdReducer);\r\n  const { Result } = resultdata;\r\n  // const userData = useSelector((state) => state.getUsersByIdReducer);\r\n  // const { students, loading, error } = userData;\r\n  const userData = useSelector((state) => state.getAllUserReducer);\r\n  const { users, loading, error } = userData;\r\n  const [sortedStudents, setSortedStudents] = useState([]);\r\n  // console.log(Result)\r\n  useEffect(() => {\r\n    dispatch(getResultByExamId(exam_id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Result != null) {\r\n      // const user_ids = Result.map((result) => result.user_id);\r\n      // dispatch(getUsersById(user_ids));\r\n      dispatch(getAllUser());\r\n    }\r\n  }, [Result,dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   if (students.length > 0) {\r\n  //     const sorted = [...students].sort((a, b) => a.registration_no - b.registration_no);\r\n  //     setSortedStudents(sorted);\r\n  //   }\r\n  // }, [students]);\r\n  useEffect(() => {\r\n    if (users.length > 0) {\r\n      const sorted = [...users].sort((a, b) => a.registration_no - b.registration_no);\r\n      setSortedStudents(sorted);\r\n    }\r\n  }, [users]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {loading && <Loader />}\r\n        {error && <Error />}\r\n\r\n        <div style={{paddingLeft:\"6rem\",paddingRight:\"6rem\",paddingTop:\"2rem\"}}>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name Of Student</th>\r\n                <th>Registration No</th>\r\n                <th>Mark</th>\r\n                <th>Review Answers</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Result && sortedStudents.map((student) => {\r\n                const res = Result.find((result) => result.user_id === student._id);\r\n         \r\n                const percentage = res !== undefined ? res.percentage !== undefined ? res.percentage : null : null; \r\n               \r\n                const answers = res !== undefined ? res.answers !== undefined ? res.answers : null : null; \r\n\r\n                return (\r\n                  <ResultData student={student} answers={answers} exam_id={exam_id} percentage={percentage} />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}