{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Mern-Quiz-App\\\\client\\\\src\\\\Components\\\\User\\\\ExaminationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Loader from '../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExaminationPage = () => {\n  _s();\n  var _questions$currentInd, _questions$currentInd2;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const AllQuestions = useSelector(state => state.getAllQuestionsReducer);\n  const {\n    Questions\n  } = AllQuestions;\n  const getExam = useSelector(state => state.getExamByIdReducer);\n  const {\n    Allexam\n  } = getExam;\n  // console.log(Allexam)\n  const [isExamCompleted, setIsExamCompleted] = useState(false);\n  const [isOn, setIsOn] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [answer, setAnswer] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [examTime, setExamTime] = useState(null);\n  const examId = useParams();\n  //  console.log(examId);\n\n  const submitExam = async () => {\n    // let currentTime = new Date();\n    // console.log(currentTime);\n    console.log(answer);\n    const per = calculateCorrectPercentage();\n    console.log(per);\n    // await fetch('/api/result/setResult',{\n    //   method:\"POST\",\n    //   headers:{\n    //     \"Content-Type\" : \"application/json\"\n    //   },\n    //   body: JSON.stringify({exam_id:examId.exam_id,answers:answer,percentage: per})\n    // });\n    setIsExamCompleted(true);\n  };\n  // console.log(answer)\n  useEffect(() => {\n    let timer;\n    if (examTime !== null) {\n      // console.log(examTime)\n      const time = examTime;\n      if (!isOn) {\n        timer = setTimeout(submitExam, examTime * 60000); // Submit exam after specified time\n      } else {\n        timer = setInterval(() => {\n          setCurrentIndex(prevIndex => {\n            if (prevIndex === questions.length - 1) {\n              clearInterval(timer);\n              if (answer) {\n                submitExam();\n              } // Call submitExam when all questions are answered\n            } else {\n              return (prevIndex + 1) % questions.length;\n            }\n          });\n        }, time * 60000); // Switch to next question every specified time\n      }\n    }\n\n    return () => {\n      clearTimeout(timer);\n      clearInterval(timer);\n    };\n  }, [isOn, questions, examTime]);\n  useEffect(() => {\n    dispatch(getAllQuestions(examId));\n    dispatch(getExamById(examId));\n  }, [dispatch, examId]);\n  useEffect(() => {\n    if (Allexam && Questions) {\n      setIsOn(Allexam.exam_type);\n      setQuestions(Questions[0].questions);\n      setAnswer(new Array(Questions.length).fill(null));\n      setExamTime(Allexam.exam_time);\n    }\n  }, [Allexam, Questions]);\n\n  //  console.log(questions)\n  //  console.log(isOn)\n\n  //  const handleOptionSelect = (index,optionIndex) => {\n  //   const updatedAnswer  = [...answer];\n  //   updatedAnswer[index] = optionIndex;\n  //   setAnswer(updatedAnswer);\n  //  }\n  const handleOptionSelect = (index, optionIndex) => {\n    // console.log(index,optionIndex);\n    setAnswer(prevAnswer => {\n      //  console.log(prevAnswer)\n      const updatedAnswer = [...prevAnswer];\n      updatedAnswer[index] = optionIndex;\n      // console.log(updatedAnswer)\n      return updatedAnswer;\n    });\n  };\n  const calculateCorrectPercentage = () => {\n    const totalQuestions = questions.length;\n    const correctAnswers = answer.filter((answer, index) => answer === questions[index].answer).length;\n    // console.log(correctAnswers);\n    const percentage = correctAnswers / totalQuestions * 100;\n    return percentage.toFixed(2);\n  };\n  const handleGoBack = () => {\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Questions == null ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }, this) : isExamCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exam is completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Result : \", calculateCorrectPercentage(), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoBack,\n        children: \"Go back to homepage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : !isOn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions && questions.map((quesion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quesion === null || quesion === void 0 ? void 0 : quesion.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), quesion === null || quesion === void 0 ? void 0 : quesion.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `option-${index}`,\n              value: optionIndex,\n              checked: answer[index] === optionIndex,\n              onChange: () => handleOptionSelect(index, optionIndex)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), option]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: (_questions$currentInd = questions[currentIndex]) === null || _questions$currentInd === void 0 ? void 0 : _questions$currentInd.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), (_questions$currentInd2 = questions[currentIndex]) === null || _questions$currentInd2 === void 0 ? void 0 : _questions$currentInd2.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${currentIndex}`,\n          value: optionIndex,\n          checked: answer[currentIndex] === optionIndex,\n          onChange: () => handleOptionSelect(currentIndex, optionIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), option]\n      }, optionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ExaminationPage, \"6zFhB6AdEv3h1KwQzz2OCJfNdEs=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useParams];\n});\n_c = ExaminationPage;\nexport default ExaminationPage;\nvar _c;\n$RefreshReg$(_c, \"ExaminationPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","getAllQuestions","getExamById","useParams","useNavigate","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","ExaminationPage","_s","_questions$currentInd","_questions$currentInd2","dispatch","navigate","AllQuestions","state","getAllQuestionsReducer","Questions","getExam","getExamByIdReducer","Allexam","isExamCompleted","setIsExamCompleted","isOn","setIsOn","questions","setQuestions","answer","setAnswer","currentIndex","setCurrentIndex","examTime","setExamTime","examId","submitExam","console","log","per","calculateCorrectPercentage","timer","time","setTimeout","setInterval","prevIndex","length","clearInterval","clearTimeout","exam_type","Array","fill","exam_time","handleOptionSelect","index","optionIndex","prevAnswer","updatedAnswer","totalQuestions","correctAnswers","filter","percentage","toFixed","handleGoBack","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","quesion","title","options","option","type","name","value","checked","onChange","_c","$RefreshReg$"],"sources":["E:/project/Mern-Quiz-App/client/src/Components/User/ExaminationPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux'; \r\nimport { getAllQuestions, getExamById } from '../../Actions/examAction';\r\nimport { useParams,useNavigate } from 'react-router-dom';\r\nimport Loader from '../Loader';\r\n\r\n\r\n\r\nconst ExaminationPage = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const AllQuestions = useSelector((state)=>state.getAllQuestionsReducer);\r\n  const {Questions} = AllQuestions;\r\n  const getExam = useSelector((state)=> state.getExamByIdReducer)\r\n  const {Allexam} = getExam;\r\n  // console.log(Allexam)\r\n  const [isExamCompleted, setIsExamCompleted] = useState(false);\r\n  const[isOn,setIsOn] = useState(false);\r\n  const[questions,setQuestions] = useState([]);\r\n  const[answer,setAnswer] = useState([]);\r\n  const[currentIndex,setCurrentIndex] = useState(0);\r\n  const[examTime,setExamTime] = useState(null)\r\n  const examId = useParams();\r\n  //  console.log(examId);\r\n\r\n\r\n  const submitExam = async() => {\r\n    // let currentTime = new Date();\r\n    // console.log(currentTime);\r\n    console.log(answer)\r\n    const per = calculateCorrectPercentage();\r\n    console.log(per)\r\n    // await fetch('/api/result/setResult',{\r\n    //   method:\"POST\",\r\n    //   headers:{\r\n    //     \"Content-Type\" : \"application/json\"\r\n    //   },\r\n    //   body: JSON.stringify({exam_id:examId.exam_id,answers:answer,percentage: per})\r\n    // });\r\n    setIsExamCompleted(true);\r\n  }\r\n// console.log(answer)\r\nuseEffect(() => {\r\n  let timer;\r\n  if (examTime !== null) {\r\n    // console.log(examTime)\r\n    const time = examTime;\r\n    if (!isOn) {\r\n      timer = setTimeout(submitExam, examTime*60000); // Submit exam after specified time\r\n    } else {\r\n      timer = setInterval(() => {\r\n        setCurrentIndex((prevIndex) => {\r\n          if (prevIndex === questions.length - 1) {\r\n            clearInterval(timer);\r\n            if(answer){submitExam();} // Call submitExam when all questions are answered\r\n          } else {\r\n            \r\n            return (prevIndex + 1) % questions.length;\r\n          }\r\n        });\r\n      }, time*60000); // Switch to next question every specified time\r\n    }\r\n  }\r\n\r\n  return () => {\r\n    clearTimeout(timer);\r\n    clearInterval(timer);\r\n  };\r\n}, [isOn, questions, examTime]);\r\n\r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n    dispatch(getAllQuestions(examId))\r\n    dispatch(getExamById(examId))\r\n  },[dispatch,examId])\r\n\r\n  useEffect(()=>{\r\n    if(Allexam && Questions){\r\n      setIsOn(Allexam.exam_type)\r\n      setQuestions(Questions[0].questions);\r\n      setAnswer(new Array(Questions.length).fill(null));\r\n      setExamTime(Allexam.exam_time)\r\n    }\r\n  },[Allexam,Questions]);\r\n\r\n  //  console.log(questions)\r\n  //  console.log(isOn)\r\n\r\n  //  const handleOptionSelect = (index,optionIndex) => {\r\n  //   const updatedAnswer  = [...answer];\r\n  //   updatedAnswer[index] = optionIndex;\r\n  //   setAnswer(updatedAnswer);\r\n  //  }\r\n   const handleOptionSelect = (index, optionIndex) => {\r\n    // console.log(index,optionIndex);\r\n    setAnswer((prevAnswer) => {\r\n      //  console.log(prevAnswer)\r\n      const updatedAnswer = [...prevAnswer];\r\n      updatedAnswer[index] = optionIndex;\r\n        // console.log(updatedAnswer)\r\n      return updatedAnswer;\r\n    });\r\n  };\r\n\r\n\r\n\r\n   const calculateCorrectPercentage = () => {\r\n    const totalQuestions = questions.length;\r\n    const correctAnswers = answer.filter(\r\n      (answer, index) => answer === questions[index].answer\r\n    ).length;\r\n    // console.log(correctAnswers);\r\n    const percentage = (correctAnswers / totalQuestions) * 100;\r\n    return percentage.toFixed(2);\r\n  };\r\n\r\n   const handleGoBack = () => {\r\n    navigate('/home')\r\n  };\r\n\r\n  return (\r\n   <>\r\n   { \r\n    Questions == null ? <Loader/> :\r\n    isExamCompleted ? (\r\n        <div>\r\n          <h3>Exam is completed</h3>\r\n          <h4>Result : {calculateCorrectPercentage()}%</h4>\r\n          <button onClick={handleGoBack}>Go back to homepage</button>\r\n        </div>\r\n      ) \r\n      :\r\n    !isOn ? (\r\n      <div>\r\n         {questions && questions.map((quesion,index)=>(\r\n          <div>\r\n          <h3>{quesion?.title}</h3>\r\n          {quesion?.options.map((option,optionIndex)=>(\r\n            <div>\r\n            <label key={optionIndex}>\r\n              <input\r\n                type='radio'\r\n                name={`option-${index}`}\r\n                value={optionIndex}\r\n                checked={answer[index] === optionIndex}\r\n                onChange={() => handleOptionSelect(index,optionIndex)}\r\n              />\r\n              {option}\r\n            </label><br/>\r\n            </div>\r\n          ))}\r\n          </div>\r\n          \r\n        ))}\r\n        {/* <input type='submit' onClick={submitExam}/> */}\r\n        </div>\r\n    ) : (\r\n      <div>\r\n          <h3>{questions[currentIndex]?.title}</h3>\r\n          {questions[currentIndex]?.options.map((option, optionIndex) => (\r\n            <label key={optionIndex}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${currentIndex}`}\r\n                value={optionIndex}\r\n                checked={answer[currentIndex] === optionIndex}\r\n                onChange={() => handleOptionSelect(currentIndex,optionIndex)}\r\n              />\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n    )\r\n   }\r\n   \r\n   </>\r\n  );\r\n};\r\n\r\nexport default ExaminationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}